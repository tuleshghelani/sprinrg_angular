{"version":3,"sources":["./src/app/pages/admin/sidebar/sidebar.component.ts","./src/app/pages/admin/sidebar/sidebar.component.html","./src/app/pages/user/instructions/instructions.component.ts","./src/app/pages/user/instructions/instructions.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/user/load-quiz/load-quiz.component.ts","./src/app/pages/user/load-quiz/load-quiz.component.html","./src/app/pages/admin/add-quiz/add-quiz.component.ts","./src/app/pages/admin/add-quiz/add-quiz.component.html","./src/app/services/auth.interceptor.ts","./src/environments/environment.ts","./src/app/componets/footer/footer.component.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/services/login.service.ts","./src/app/services/user.guard.ts","./src/app/pages/admin/update-question/update-question.component.ts","./src/app/pages/admin/update-question/update-question.component.html","./src/app/componets/navbar/navbar.component.html","./src/app/componets/navbar/navbar.component.ts","./src/app/pages/admin/add-questions/add-questions.component.ts","./src/app/pages/admin/add-questions/add-questions.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/user/about-quiz/about-quiz.component.ts","./src/app/pages/user/about-quiz/about-quiz.component.html","./src/app/services/question.service.ts","./src/app/pages/admin/add-category/add-category.component.ts","./src/app/pages/admin/add-category/add-category.component.html","./src/app/pages/profile/profile.component.html","./src/app/pages/profile/profile.component.ts","./src/app/app.module.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.html","./src/app/pages/admin/welcome/welcome.component.ts","./src/app/pages/admin/welcome/welcome.component.html","./src/app/services/category.service.ts","./src/app/pages/admin/view-categories/view-categories.component.ts","./src/app/pages/admin/view-categories/view-categories.component.html","./src/app/services/admin.guard.ts","./src/app/pages/admin/update-category/update-category.component.ts","./src/app/pages/admin/update-category/update-category.component.html","./src/app/pages/user/sidebar/sidebar.component.ts","./src/app/pages/user/sidebar/sidebar.component.html","./src/app/pages/errorpage/error404/error404.component.ts","./src/app/pages/errorpage/error404/error404.component.html","./src/app/pages/admin/update-quiz/update-quiz.component.ts","./src/app/pages/admin/update-quiz/update-quiz.component.html","./src/app/services/helper.ts","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/services/quiz.service.ts","./src/app/services/user.service.ts","./src/app/pages/admin/dashboard/dashboard.component.ts","./src/app/pages/admin/dashboard/dashboard.component.html","./src/app/pages/user/start/start.component.ts","./src/app/pages/user/start/start.component.html","./src/app/pages/admin/view-quizzes/view-quizzes.component.ts","./src/app/pages/admin/view-quizzes/view-quizzes.component.html","./src/app/app-routing.module.ts","./src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.ts","./src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n\r\n    <mat-action-list>\r\n\r\n        <div mat-subheader>Menu</div>\r\n        <button mat-list-item routerLink=\"/admin\"><mat-icon mat-list-icon>grid_view</mat-icon>DashBoard</button>\r\n\r\n        <button mat-list-item routerLink=\"/admin/profile\">\r\n            <mat-icon mat-list-icon>account_circle</mat-icon>\r\n            Profile\r\n        </button>\r\n        <button mat-list-item routerLink=\"/admin/categories\">\r\n            <mat-icon mat-list-icon>category</mat-icon>\r\n            Categories\r\n        </button>\r\n        <button mat-list-item routerLink=\"/admin/add-category\">\r\n            <mat-icon mat-list-icon>add_shopping_cart</mat-icon>\r\n            Add Categories\r\n        </button>\r\n        <button mat-list-item routerLink=\"/admin/quizzes\">\r\n            <mat-icon mat-list-icon>quiz</mat-icon>\r\n            Quizzes\r\n        </button>\r\n        <button mat-list-item routerLink=\"/admin/add-quiz\">\r\n            <mat-icon mat-list-icon>add</mat-icon>\r\n            Add Quiz\r\n        </button>\r\n        <button mat-list-item routerLink=\"/admin/error404\">\r\n            <mat-icon mat-list-icon>logout</mat-icon>\r\n            Logout\r\n        </button>\r\n\r\n        <button mat-list-item routerLink=\"/admin/profile\">\r\n            <mat-icon mat-list-icon>logout</mat-icon>\r\n            Demo\r\n        </button>\r\n        <button mat-list-item routerLink=\"/admin/profile\">\r\n            <mat-icon mat-list-icon>logout</mat-icon>\r\n            Demo\r\n        </button>\r\n\r\n\r\n\r\n    </mat-action-list>\r\n\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\nimport { StartComponent } from '../start/start.component';\r\n\r\n@Component({\r\n  selector: 'app-instructions',\r\n  templateUrl: './instructions.component.html',\r\n  styleUrls: ['./instructions.component.css']\r\n})\r\nexport class InstructionsComponent implements OnInit {\r\n\r\n  // Local Variable\r\n  qid\r\n  quizessData\r\n  constructor(private _route: ActivatedRoute, private _quizService: QuizService, private _router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.qid = this._route.snapshot.params.qid;\r\n    console.log(this.qid);\r\n\r\n    this._quizService.getSingleQuiz(this.qid).subscribe(\r\n      (data:any)=>{\r\n        //Success\r\n        this.quizessData = data;\r\n        // console.log(this.quizessData);\r\n      },\r\n      (error)=>{\r\n        //error\r\n        Swal.fire(\"Error\" , \"Server Error while loading quiz...\");\r\n      }\r\n    );\r\n\r\n  }\r\n  startQuiz(){\r\n    // this._router.\r\n    // [routerLink]=\"'/start/'+qid\"\r\n    Swal.fire({\r\n      title:'Do You want to start the quiz',\r\n       showCancelButton:true,\r\n       confirmButtonText: 'Start',\r\n       denyButtonText: \"Don't Start\",\r\n       icon: 'info',\r\n    }).then((result)=>{\r\n      if (result.isConfirmed){\r\n        this._router.navigate(['/start/'+this.qid]);\r\n      }else if(result.isDenied){\r\n        Swal.fire(\"Changes are not saved\", '' , 'info');\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-card class=\"mt20\">\r\n                    <mat-card-header>\r\n                        <!-- Heading -->\r\n                        <mat-card-title>\r\n                            <!-- Title -->\r\n                            Read the instructions of this page carefully!!!\r\n                        </mat-card-title>\r\n                        <mat-card-subtitle>\r\n                            <!-- Sub Title -->\r\n                            One Step more to go\r\n                        </mat-card-subtitle>\r\n                    </mat-card-header>\r\n                    <mat-card-content class=\"ml20\">\r\n                        <!-- Content -->\r\n                        <h1> {{quizessData.title}}</h1>\r\n                        <p>{{quizessData.description}}</p>\r\n                        <mat-divider></mat-divider>\r\n\r\n                        <br>\r\n\r\n                        <h1>Important Instructions</h1>\r\n                        <ul>\r\n                            <!--Every questions have 2 min only -->\r\n                            <li>Total time to solve Time is : <b>{{quizessData.numberOfQuestions * 2}}</b></li>\r\n                            <li>No Of Questions : <b>{{quizessData.numberOfQuestions}}</b> </li>\r\n                            <li>Each question carries : <b>{{quizessData.maxMarks /quizessData.numberOfQuestions}}</b> </li>\r\n                            <li>This quiz is testing purpose</li>\r\n                            <li>This quiz is testing purpose</li>\r\n\r\n                        </ul>\r\n\r\n                        <mat-divider></mat-divider>\r\n                        <br/>\r\n                        <h1>Attempting Quiz</h1>\r\n                        <ul>\r\n                            <li>Click <b>Start Quiz</b> to start quiz</li>\r\n                            <li>The will start </li>\r\n                            <li>The will start </li>\r\n\r\n\r\n                        </ul>\r\n\r\n                    </mat-card-content>\r\n                    <mat-card-actions class=\"text-center\">\r\n                        <!-- Action -->\r\n                        <button (click)=\"startQuiz()\" mat-raised-button color=\"accent\">Start Quizz</button>\r\n                    </mat-card-actions>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n    <div class=\"container\">\r\n        <div class=\"row mt20\">\r\n            <div class=\"col-md-6 offset-md-3 text-center\">\r\n\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n                <h1>Welcome to Exam Portal</h1>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-load-quiz',\r\n  templateUrl: './load-quiz.component.html',\r\n  styleUrls: ['./load-quiz.component.css']\r\n})\r\nexport class LoadQuizComponent implements OnInit {\r\n\r\n  //Local veriable\r\n  catId\r\n  quizzList \r\n  constructor(private _route:ActivatedRoute, private _quizService: QuizService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe((params)=>{\r\n      this.catId =  params.catId;\r\n\r\n      if (this.catId == 0){\r\n        console.log(\"All Quizees loaded\");\r\n        this._quizService.getActiveQuzzes().subscribe(\r\n          (data:any)=>{\r\n           //Success\r\n           this.quizzList = data;\r\n           console.log(this.quizzList);\r\n   \r\n        },\r\n        (error)=>{\r\n         //Error\r\n         Swal.fire(\"Error\" , \"Server Error while loading all quizes!!!!\");\r\n        }\r\n        );\r\n      }else{\r\n        console.log(\"Specfic category laoded\");\r\n        this._quizService.getActiveQuzzesOfCategory(this.catId).subscribe(\r\n          (data:any)=>{\r\n            //success\r\n            this.quizzList = data;\r\n            console.log(this.quizzList);\r\n          },\r\n          (error)=>{\r\n            //error\r\n            Swal.fire(\"Error\" ,\"Server error while loading quizzes by category\");\r\n          },\r\n        );\r\n      }\r\n\r\n    });\r\n   \r\n   \r\n  }\r\n\r\n}\r\n","<div class=\"bootstarp-wrapper\">\r\n    <div class=\"container-fluid\">\r\n        <h1 class=\"mt20\">Available Quizzes</h1>\r\n        <div class=\"row\" mt20 *ngIf=\"quizzList\">\r\n            <div class=\"col-md-4\" *ngFor=\"let q of quizzList\">\r\n                <mat-card class=\"mb20\">\r\n                    <mat-card-header>\r\n                        <div mat-card-avatar class=\"example-header-image\"> </div>\r\n                        <mat-card-title>\r\n                            {{q.title}}\r\n                        </mat-card-title>\r\n                        <mat-card-subtitle>\r\n                            {{q.category.title}}\r\n                        </mat-card-subtitle>\r\n                    </mat-card-header>\r\n                    <mat-card-content>\r\n                        <p class=\"truncate\">{{q.description}}</p>\r\n                    </mat-card-content>\r\n\r\n                    <mat-card-actions>\r\n                        <button mat-button color=\"primary\" [routerLink]=\"'/user-dashboard/about-quiz/'+q.qid\"> View</button>\r\n                        <button mat-button color=\"accent\" class=\"ml20\" [routerLink]=\"'/user-dashboard/instructions/'+q.qid\"> Start</button>\r\n                        <button mat-button color=\"primary\"> Q:{{q.numberOfQuestions}}</button>\r\n                        <button mat-button color=\"accent\"> M M:{{q.maxMarks}}</button>\r\n                    </mat-card-actions>\r\n                </mat-card>\r\n            </div>\r\n            <div class=\"col-md-12\" *ngIf=\"quizzList.length==0\">\r\n                <mat-card>\r\n                    <mat-card-content class=\"text-center\">\r\n                        <h1>No data Available in this Category</h1>\r\n                    </mat-card-content>\r\n\r\n                    <mat-card-actions class=\"text-center\">\r\n                        <button mat-raised-button color=\"primary\" [routerLink]=\"'/user-dashboard/0'\"> Home</button>\r\n                    </mat-card-actions>\r\n\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\ninterface Food {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-quiz',\r\n  templateUrl: './add-quiz.component.html',\r\n  styleUrls: ['./add-quiz.component.css']\r\n})\r\nexport class AddQuizComponent implements OnInit {\r\n  // Form data binding\r\n  quizData = {\r\n    title: '',\r\n    description: '',\r\n    maxMarks: '',\r\n    numberOfQuestions: '',\r\n    active: true,\r\n    category:{\r\n      cid:'',\r\n    },\r\n  };\r\n\r\n  categories = [\r\n    //Dummy data\r\n    // {\r\n    //   cid:23,\r\n    //   title:\"programming\",\r\n    // },\r\n\r\n    // {\r\n    //   cid:23,\r\n    //   title:\"programming\",\r\n    // }\r\n  ];\r\n  constructor(private _categoryService: CategoryService, private _quizService :QuizService, private _snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this._categoryService.categories().subscribe(\r\n      (data: any)=>{\r\n        //success\r\n        this.categories = data;\r\n        console.log(this.categories);\r\n      },\r\n      (error)=>{\r\n        //error\r\n        console.log(error);\r\n        Swal.fire(\"Oop's\",'Server error while loading data!!!','error');\r\n      });\r\n  }\r\n\r\n  //add quiz\r\n  public addQuiz(){\r\n          if (this.quizData.title.trim() == '' || this.quizData.title == null){\r\n              this._snackBar.open('title is required!!','ok',{\r\n                duration:3000,\r\n              });\r\n              return;\r\n          }\r\n\r\n          if (this.quizData.description.trim() == '' || this.quizData.description == null){\r\n            this._snackBar.open('description is required!!','ok',{\r\n              duration:3000,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.quizData.maxMarks.trim() == '' || this.quizData.maxMarks == null){\r\n          this._snackBar.open('Max Marks is required!!','ok',{\r\n            duration:3000,\r\n          });\r\n          return;\r\n      }\r\n        if (this.quizData.numberOfQuestions.trim() == '' || this.quizData.numberOfQuestions == null){\r\n          this._snackBar.open('Number of questions is required!!','ok',{\r\n            duration:3000,\r\n          });\r\n          return;\r\n      }\r\n\r\n      if (this.quizData.category.cid == '' || this.quizData.category.cid == null){\r\n        this._snackBar.open('category is required!!','ok',{\r\n          duration:3000,\r\n        });\r\n        return;\r\n      }\r\n\r\n      //Now call server\r\n      this._quizService.addingNewQuiz(this.quizData).subscribe(\r\n        (data)=>{\r\n          //success\r\n          this.quizData.title = '',\r\n          this.quizData.description = '',\r\n          this.quizData.maxMarks = '',\r\n          this.quizData.numberOfQuestions = '',\r\n          this.quizData.category.cid = '',\r\n          Swal.fire('Success', 'Quiz added!!', 'success');\r\n        },\r\n        (error)=>{\r\n          //error\r\n          Swal.fire('Error', 'Server Error While adding Quiz Try Again!!', 'error');\r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <h1>Add New Quiz</h1>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col md 8 offset-md-2\">\r\n                <form (ngSubmit)=\"addQuiz()\">\r\n\r\n                    <!-- title field -->\r\n                    <mat-form-field appearance=\"outline\" class=\"w100\">\r\n                        <mat-label>Enter Title</mat-label>\r\n                        <input required [(ngModel)]=\"quizData.title\" type=\"text\" name=\"title\" placeholder=\"Enter Here.....\" matInput>\r\n                    </mat-form-field>\r\n\r\n                    <!-- description field -->\r\n                    <mat-form-field appearance=\"outline\" class=\"w100\">\r\n                        <mat-label>Enter Description</mat-label>\r\n                        <textarea required [(ngModel)]=\"quizData.description\" type=\"text\" rows=\"10\" name=\"description placeholder=\" matInput Enter description Here.....></textarea>\r\n                    </mat-form-field>\r\n\r\n                    <div class=\"row\">\r\n                        <!-- maxmium Marks  -->\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w100\">\r\n                                <mat-label>Maximum Marks</mat-label>\r\n                                <input required [(ngModel)]=quizData.maxMarks type=\"text\" name=\"maxMarks\" placeholder=\"Enter Here.....\" matInput>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <!-- number of questions to be displayed -->\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w100\">\r\n                                <mat-label>Number of Questions</mat-label>\r\n                                <input required [(ngModel)]=quizData.numberOfQuestions type=\"text\" name=\"numberOfQuestions\" placeholder=\"Enter Here.....\" matInput>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <!-- Select Category  -->\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field appearance=\"fill\" class=\"w50\">\r\n                                <mat-label>Categories</mat-label>\r\n                                <mat-select required name=\"category\" [(ngModel)]=\"quizData.category.cid\">\r\n                                    <mat-option *ngFor=\"let c of categories\" [value]=\"c.cid\">\r\n                                        {{c.title}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <!-- Quiz Status Enable or disable -->\r\n                        <div class=\"col-md-6\">\r\n                            <mat-slide-toggle required name=\"active\" class=\"mt20\" [(ngModel)]=\"quizData.active\">\r\n                                Publish Status\r\n                            </mat-slide-toggle>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"container text-center\">\r\n                        <button type=\"submit\" mat-raised-button color=\"primary\">Add</button>\r\n                        <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-card>\r\n\r\n<!-- {{quizData | json}} -->","import { HttpEvent,\r\n        HttpHandler,\r\n        HttpInterceptor,\r\n        HttpRequest,\r\n        HTTP_INTERCEPTORS\r\n     } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { LoginService } from \"./login.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n\r\n    constructor(private loginService: LoginService){\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n\r\n        //add the  JWT token from LocalStorage to pass request\r\n        // \r\n        let authReq = req;\r\n        const token = this.loginService.getToken();\r\n        if (token != null){\r\n            authReq = authReq.clone({setHeaders:{Authorization: `Bearer ${token}` },\r\n            \r\n            });\r\n        }\r\n        return next.handle(authReq);\r\n    }\r\n\r\n}\r\n\r\nexport const AuthInterceptorProviders=[{\r\n    provide:HTTP_INTERCEPTORS,\r\n    useClass:AuthInterceptor,\r\n    multi:true,\r\n}\r\n]","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n    \r\n  \r\n  \r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    constructor(private snackBar: MatSnackBar , private loginService: LoginService, private router: Router) { }\r\n\r\n    // Login Object\r\n  loginData = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // Login form Submit method\r\n  loginFormSubmit(){\r\n    console.log('Login Button Clicked');\r\n    console.log(this.loginData);\r\n\r\n    // Validations of login form\r\n    // For Username\r\n    // tslint:disable-next-line:triple-equals\r\n    if (this.loginData.username.trim() == '' || this.loginData.username == null){\r\n      // alert(\"Username required\");\r\n      // MatSnackBar\r\n      this.snackBar.open('Username is required!!!', 'OK', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // For Password\r\n    // tslint:disable-next-line:triple-equals\r\n    if (this.loginData.password.trim() == '' || this.loginData.password == null){\r\n      // alert(\"Password required\");\r\n      this.snackBar.open('Password is required!!!', 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Request to server to generate JWT Token\r\n    this.loginService.generateToken(this.loginData).subscribe(\r\n        (data: any) => {\r\n          // Success\r\n          console.log(data);\r\n          // alert(\"Succeessfully Token genrated!!!\");\r\n\r\n          // After Successfully generated token then login from here!!!\r\n          this.loginService.loginUser(data.token);\r\n\r\n          // getting current user\r\n          this.loginService.getCurrentUser().subscribe(\r\n            (user: any) => {\r\n\r\n              // save user data into localStorage\r\n              this.loginService.setUser(user);\r\n              console.log(user);\r\n\r\n              // redirect: ...ADMIN: Admin-Dashboard\r\n              if (this.loginService.getUserRole() == 'ADMIN'){\r\n                // reDirect Admin DashBoard\r\n                // window.location.href=\"/admin\";\r\n                this.router.navigate(['admin']);\r\n                this.loginService.loginStatusSubject.next(true);\r\n\r\n\r\n                // redirect: ...NORMAL: Normal-Dashboard\r\n                // tslint:disable-next-line:triple-equals\r\n              }else if (this.loginService.getUserRole() == 'NORMAL'){\r\n                  // reDirect User DashBoard\r\n                  // window.location.href=\"/user-dashboard\";\r\n                  this.router.navigate(['user-dashboard/0']);\r\n                  this.loginService.loginStatusSubject.next(true);\r\n\r\n              }\r\n              else{\r\n                this.loginService.logOut();\r\n              }\r\n\r\n\r\n\r\n            },\r\n          );\r\n\r\n        },\r\n        (error) => {\r\n          // Error Occured\r\n          console.log('Oops...', 'Seems like Something went wrong!!!', error);\r\n          this.snackBar.open('Invaild credentials!!! Try Agin', 'ok', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      );\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6 offset-3\">\r\n                <mat-card>\r\n                    <div class=\"container text-center\">\r\n                        <img src=\"../../../assets/register1.png\" width=\"150px\" height=\"150px\" alt=\"\">\r\n                    </div>\r\n                    <h1 class=\"text-center\">Login Here!!</h1>\r\n\r\n                    <!-- For Print Data of  Json by using Pipe Filter -->\r\n                    <!-- {{loginData | json}} -->\r\n                    <form (ngSubmit)=\"loginFormSubmit()\">\r\n                        <!--Username field-->\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>User Name</mat-label>\r\n                            <input [(ngModel)]=\"loginData.username\" required name=\"username\" matInput placeholder=\"Enter Here!\">\r\n                            <mat-hint>Vaild Username!!</mat-hint>\r\n                        </mat-form-field>\r\n\r\n                        <!--Password field-->\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>Password</mat-label>\r\n                            <input [(ngModel)]=\"loginData.password\" required name=\"password\" type=\"password\" matInput placeholder=\"Enter Here!\">\r\n                        </mat-form-field>\r\n\r\n                        <div class=\"container text-center\">\r\n\r\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\r\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Reset</button>\r\n                        </div>\r\n                    </form>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport baseUrl from './helper';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  //event\r\n  public loginStatusSubject =  new Subject<boolean>();\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  // Login Service\r\n\r\n  //Generate Token\r\n  public generateToken(loginData: any) {\r\n\r\n    return this._http.post(`${baseUrl}/generate-token`, loginData);\r\n  }\r\n\r\n  //Login User : Set token in LocalStorage\r\n  public loginUser(token) {\r\n    localStorage.setItem(\"token\", token);\r\n    return true;\r\n  }\r\n\r\n  //Current User :  get current loggedin user\r\n  public getCurrentUser(){\r\n    return this._http.get(`${baseUrl}/current-user`);\r\n  }\r\n\r\n  //User is Logged in or not\r\n  public isLoggedIn() {\r\n    let tokenStr = localStorage.getItem(\"token\");\r\n    if (tokenStr == undefined || tokenStr == '' || tokenStr == null) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  //logOut : remove token from localStorage to logOut the user\r\n  public logOut(){\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    return true;\r\n  }\r\n\r\n  //get token\r\n  public getToken(){\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n\r\n  //set userDetails\r\n  public setUser(user){\r\n    localStorage.setItem(\"user\",JSON.stringify(user));\r\n  }\r\n\r\n  //get UserDetails\r\n  public getUser(){\r\n    let userStr = localStorage.getItem(\"user\");\r\n    if (userStr != null){\r\n      return JSON.parse(userStr);\r\n    }else{\r\n      this.logOut();\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //get user role\r\n  public getUserRole(){\r\n    let user = this.getUser();\r\n    return user.authorities[0].authority\r\n  }\r\n\r\n  // get all users count for admin \r\n  public getUserCount(){\r\n    return this._http.get(`${baseUrl}/user/usercount/`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserGuard implements CanActivate {\r\n\r\n\r\n  //constructor\r\n  constructor(private loginService: LoginService, private router: Router){\r\n\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      \r\n      if (this.loginService.isLoggedIn() && this.loginService.getUserRole() == \"NORMAL\"){\r\n        ////redirect Normal User page\r\n        return true;\r\n      }//Otherwise again  navigate to login page\r\n        this.router.navigate(['login']);\r\n        \r\n      return false;\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { QuestionService } from 'src/app/services/question.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-question',\r\n  templateUrl: './update-question.component.html',\r\n  styleUrls: ['./update-question.component.css']\r\n})\r\nexport class UpdateQuestionComponent implements OnInit {\r\nquesId;\r\nupdateQuestion;\r\n  constructor(private _route: ActivatedRoute,\r\n     private _questionService: QuestionService, private _snackBar: MatSnackBar,   private _router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.quesId = this._route.snapshot.params.quesId;\r\n    this._questionService.particularQuestionById(this.quesId).subscribe(\r\n      (data:any)=>{\r\n        //success\r\n        console.log(data);\r\n        this.updateQuestion = data;\r\n\r\n      },\r\n      (error)=>{\r\n        //error\r\n        // console.log(error);\r\n        Swal.fire('Error' , 'Server error while loading data' , 'error'); \r\n      },\r\n    );\r\n  }\r\n\r\n  //Updating question while submit form\r\n  public updatingWhileSubmitQuestion(){\r\n\r\n    //validation\r\n    if (this.updateQuestion.content.trim() == '' || this.updateQuestion.content == null) {\r\n      this._snackBar.open('Question is required!!', 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.updateQuestion.option1.trim() == '' || this.updateQuestion.option1 == null) {\r\n      this._snackBar.open('Option 1 is required!!', 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.updateQuestion.option2.trim() == '' || this.updateQuestion.option2 == null) {\r\n      this._snackBar.open('Option 2 is required!!', 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // if (this.updateQuestion.option3.trim() == '' || this.updateQuestion.option3 == null){\r\n    //   this._snackBar.open('Option 3 is required!!','ok',{\r\n    //     duration: 3000,\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    // if (this.updateQuestion.option4.trim() == '' || this.updateQuestion.option4 == null){\r\n    //   this._snackBar.open('Option 4 is required!!','ok',{\r\n    //     duration: 3000,\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    if (this.updateQuestion.answer.trim() == '' || this.updateQuestion.answer == null) {\r\n      this._snackBar.open('Answer is required!!', 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    //Now calling the server to updating question\r\n\r\n    this._questionService.updateQuestionById(this.updateQuestion).subscribe(\r\n      (data)=>{\r\n        //success\r\n        // console.log(this.updateQuestion);'\r\n        this.updateQuestion.content = '',\r\n        this.updateQuestion.option1 = '',\r\n        this.updateQuestion.option2 = '',\r\n        this.updateQuestion.option3 = '',\r\n        this.updateQuestion.option4 = '',\r\n        this.updateQuestion.answer = '',\r\n        Swal.fire('Success' , 'Question Updated!!!' , 'success').then((e)=>{\r\n           //clicking ok then navigate to All questions\r\n           this._router.navigate(['/admin/view-questions/']);// some problem while routing i'll fix later\r\n        });\r\n      },\r\n      (error)=>{\r\n        //error\r\n        // console.log(error);\r\n        Swal.fire('error' , 'Server error while updating question', 'error');\r\n      },\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <h1>Update Question of : {{updateQuestion.quiz.title}}</h1>\r\n\r\n            <mat-card>\r\n                <mat-card-header>\r\n                    <mat-card-subtitle>\r\n                        Enter the detail of the new question!!\r\n                    </mat-card-subtitle>\r\n                </mat-card-header>\r\n\r\n                <mat-card-content>\r\n                    <form (ngSubmit)=\"updatingWhileSubmitQuestion()\" class=\"mt20\">\r\n                        <!-- content field -->\r\n                        <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                            <mat-label>Question Content</mat-label>\r\n                            <textarea required [(ngModel)]=\"updateQuestion.content\" name=\"content\" type=\"text\" rows=\"10\" matInput></textarea>\r\n                        </mat-form-field>\r\n\r\n                        <!-- Option 1  -->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                                    <mat-label>Option 1</mat-label>\r\n                                    <input required [(ngModel)]=\"updateQuestion.option1\" type=\"text\" name=\"option1\" placeholder=\"Enter Here.....\" matInput>\r\n                                </mat-form-field>\r\n                            </div>\r\n\r\n                            <!-- Option 2  -->\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                                    <mat-label>Option 2</mat-label>\r\n                                    <input required [(ngModel)]=\"updateQuestion.option2\" type=\"text\" name=\"option2\" placeholder=\"Enter Here.....\" matInput>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <!-- Option 3  -->\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                                    <mat-label>Option 3</mat-label>\r\n                                    <input [(ngModel)]=\"updateQuestion.option3\" type=\"text\" name=\"option3\" placeholder=\"Enter Here.....\" matInput>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <!-- Option 4  -->\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                                    <mat-label>Option 4</mat-label>\r\n                                    <input [(ngModel)]=\"updateQuestion.option4\" type=\"text\" name=\"option4\" placeholder=\"Enter Here.....\" matInput>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <!-- answer -->\r\n                        <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                            <mat-label>\r\n                                <---Select Answer--->\r\n                            </mat-label>\r\n                            <mat-select required [(ngModel)]=\"updateQuestion.answer\" name=\"answer\">\r\n                                <mat-option *ngIf=\"updateQuestion.option1\" [value]=\"updateQuestion.option1\">{{updateQuestion.option1}}</mat-option>\r\n                                <mat-option *ngIf=\" updateQuestion.option2\" [value]=\"updateQuestion.option2\">{{updateQuestion.option2}}</mat-option>\r\n                                <mat-option *ngIf=\"updateQuestion.option3\" [value]=\"updateQuestion.option3\">{{updateQuestion.option3}}</mat-option>\r\n                                <mat-option *ngIf=\" updateQuestion.option4\" [value]=\"updateQuestion.option4\">{{updateQuestion.option4}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <div class=\"container text-center\">\r\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Update</button>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n\r\n            </mat-card>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- {{updateQuestion | json}} -->","<!-- <h1>This is navbar</h1> -->\r\n<mat-sidenav-container mat-app-background [ngClass]=\"isDarkTheme? 'dark-theme' : 'light-theme' \">\r\n    <mat-toolbar color=\"primary\">\r\n        <a routerLink=\"/\" mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\r\n            <mat-icon>widgets</mat-icon>\r\n        </a>\r\n        <span>Exam Portal</span>\r\n        <span class=\"example-spacer\"></span>\r\n\r\n        <mat-icon matTooltip=\"Switch Theme\">light_mode</mat-icon>\r\n        <mat-slide-toggle (click)=\"toggleTheme()\" ngx-tooltip></mat-slide-toggle>\r\n        <mat-icon>nights_stay</mat-icon>\r\n\r\n\r\n\r\n        <a *ngIf=\"!isLoggedIn\" [routerLink]=\"'/login'\" mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\r\n              Login\r\n            </a>\r\n\r\n        <a *ngIf=\"!isLoggedIn\" [routerLink]=\"'/signup'\" mat-icon-button class=\"example-icon mr20 ml20\" aria-label=\"Example icon-button with share icon\">\r\n                Register\r\n            </a>\r\n\r\n        <a *ngIf=\" isLoggedIn && user\" routerLink=\"/admin/profile\" mat-button class=\"example-icon mr20 ml20 \" aria-label=\"Example icon-button with share icon \">\r\n                Welcome back :  {{user.username}}\r\n            </a>\r\n\r\n        <a (click)=\"logout()\" *ngIf=\" isLoggedIn \" mat-icon-button class=\"example-icon  ml20 \" aria-label=\"Example icon-button with share icon \">\r\n                Logout\r\n            </a>\r\n\r\n    </mat-toolbar>\r\n\r\n\r\n    <mat-card>\r\n        <!-- Dynamic Content -->\r\n        <router-outlet></router-outlet>\r\n        <!-- footer -->\r\n        <app-footer></app-footer>\r\n    </mat-card>\r\n\r\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  isLoggedIn = false;\r\n  user = null;\r\n  isDarkTheme = false;\r\n\r\n//  constructor\r\n  constructor(public loginService: LoginService){\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = this.loginService.isLoggedIn();\r\n    this.user = this.loginService.getUser();\r\n    this.loginService.loginStatusSubject.asObservable().subscribe(data => {\r\n\r\n      this.isLoggedIn = this.loginService.isLoggedIn();\r\n      this.user = this.loginService.getUser();\r\n\r\n    });\r\n\r\n    // LocalStorge Dark theme when ng init() loading\r\n    this.isDarkTheme = localStorage.getItem('theme') === 'dark' ? true : false;\r\n\r\n}\r\n\r\n// Dark theme \r\n    toggleTheme(){\r\n      this.isDarkTheme = !this.isDarkTheme;\r\n      localStorage.setItem('theme', this.isDarkTheme ? 'dark' : 'light');\r\n    }\r\n\r\n//  Logout method\r\n  public logout(){\r\n    console.log('logout click');\r\n    this.loginService.logOut();\r\n    window.location.reload();\r\n    // this.loginService.loginStatusSubject.next(false);\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuestionService } from 'src/app/services/question.service';\r\nimport Swal from 'sweetalert2';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n@Component({\r\n  selector: 'app-add-questions',\r\n  templateUrl: './add-questions.component.html',\r\n  styleUrls: ['./add-questions.component.css']\r\n})\r\nexport class AddQuestionsComponent implements OnInit {\r\n\r\n  public Editor = ClassicEditor;\r\n\r\n  qId;\r\n  qTitle;\r\n  questions = {\r\n    quiz: {},\r\n    content: '',\r\n    option1: '',\r\n    option2: '',\r\n    option3: '',\r\n    option4: '',\r\n    answer: '',\r\n  }\r\n\r\n\r\n  constructor(private _route: ActivatedRoute, private _questionService: QuestionService, private _snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.qId = this._route.snapshot.params.qid;\r\n    this.qTitle = this._route.snapshot.params.title;\r\n    this.questions.quiz['qid'] = this.qId;\r\n    this.questions.quiz['title'] = this.qTitle;\r\n    console.log(this.qId, this.qTitle);\r\n  }\r\n  //add questions\r\n  addQuestions() {\r\n    //validation\r\n    if (this.questions.content.trim() == '' || this.questions.content == null) {\r\n      this._snackBar.open('Question is required!!', 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.questions.option1.trim() == '' || this.questions.option1 == null) {\r\n      this._snackBar.open('Option 1 is required!!', 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.questions.option2.trim() == '' || this.questions.option2 == null) {\r\n      this._snackBar.open('Option 2 is required!!', 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // if (this.questions.option3.trim() == '' || this.questions.option3 == null){\r\n    //   this._snackBar.open('Option 3 is required!!','ok',{\r\n    //     duration: 3000,\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    // if (this.questions.option4.trim() == '' || this.questions.option4 == null){\r\n    //   this._snackBar.open('Option 4 is required!!','ok',{\r\n    //     duration: 3000,\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    if (this.questions.answer.trim() == '' || this.questions.answer == null) {\r\n      this._snackBar.open('Answer is required!!', 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    //Now calling the server to add question\r\n    this._questionService.addQuestion(this.questions).subscribe(\r\n      (data) => {\r\n        //success\r\n        Swal.fire('Success', 'Question Added!!!', 'success');\r\n        //after submit data form will be blank\r\n        this.questions.content = ''\r\n        this.questions.option1 = ''\r\n        this.questions.option2 = ''\r\n        this.questions.option3 = ''\r\n        this.questions.option4 = ''\r\n        this.questions.answer = ''\r\n      },\r\n      (error) => {\r\n        //error\r\n        Swal.fire('Error', 'Server error while adding Questions', 'error');\r\n      },\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <h1>Add Question to : {{qTitle}} </h1>\r\n\r\n            <mat-card>\r\n                <mat-card-header>\r\n                    <mat-card-subtitle>\r\n                        Enter the detail of the new question!!\r\n                    </mat-card-subtitle>\r\n                </mat-card-header>\r\n\r\n                <mat-card-content>\r\n                    <form (ngSubmit)=\"addQuestions()\" class=\"mt20\">\r\n                        <!-- content field -->\r\n<!--                        <mat-form-field appearance=\"fill\" class=\"w100\">-->\r\n<!--                            <mat-label>Question Content</mat-label>-->\r\n<!--                            <textarea required [(ngModel)]=\"questions.content\" name=\"content\" type=\"text\" rows=\"10\" matInput></textarea>-->\r\n<!--                        </mat-form-field>-->\r\n\r\n                         <ckeditor [editor]=\"Editor\" name=\"content\" [(ngModel)]=\"questions.content\"></ckeditor>\r\n                        <!-- Option 1  -->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                                    <mat-label>Option 1</mat-label>\r\n                                    <input required [(ngModel)]=\"questions.option1\" type=\"text\" name=\"option1\" placeholder=\"Enter Here.....\" matInput>\r\n                                </mat-form-field>\r\n                            </div>\r\n\r\n                            <!-- Option 2  -->\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                                    <mat-label>Option 2</mat-label>\r\n                                    <input required [(ngModel)]=\"questions.option2\" type=\"text\" name=\"option2\" placeholder=\"Enter Here.....\" matInput>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <!-- Option 3  -->\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                                    <mat-label>Option 3</mat-label>\r\n                                    <input [(ngModel)]=\"questions.option3\" type=\"text\" name=\"option3\" placeholder=\"Enter Here.....\" matInput>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <!-- Option 4  -->\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field appearance=\"fill\" class=\"w100 \">\r\n                                    <mat-label>Option 4</mat-label>\r\n                                    <input [(ngModel)]=\"questions.option4\" type=\"text\" name=\"option4\" placeholder=\"Enter Here.....\" matInput>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <!-- answer -->\r\n                        <mat-form-field appearance=\"fill\" class=\"w100\">\r\n                            <mat-label>\r\n                                <---Select Answer--->\r\n                            </mat-label>\r\n                            <mat-select required [(ngModel)]=\"questions.answer\" name=\"answer\">\r\n                                <mat-option *ngIf=\"questions.option1\" [value]=\"questions.option1\">{{questions.option1}}</mat-option>\r\n                                <mat-option *ngIf=\" questions.option2\" [value]=\"questions.option2\">{{questions.option2}}</mat-option>\r\n                                <mat-option *ngIf=\"questions.option3\" [value]=\"questions.option3\">{{questions.option3}}</mat-option>\r\n                                <mat-option *ngIf=\" questions.option4\" [value]=\"questions.option4\">{{questions.option4}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <div class=\"container text-center\">\r\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Add</button>\r\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n\r\n            </mat-card>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n{{questions | json}}\r\n","import { Component } from '@angular/core';\r\nimport {NavbarComponent} from './componets/navbar/navbar.component'\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n \r\n    title = 'ExamForOnline';\r\n\r\n    // user setting and API - which will fetch the saved\r\n    // user has saved Dark Theme is equal to true else it will be false\r\n    // isDarkTheme = false;\r\n  \r\n    // toggleTheme(){\r\n    //   this.isDarkTheme = !this.isDarkTheme;\r\n    // }\r\n\r\n}\r\n","<!-- Loader -->\r\n<ngx-ui-loader fgsColor=\"#ff4081\" pbColor=\"#ff4081\" fgsType=\"square-jelly-box\" text=\"Please Wait...\" textColor=\"#fff\"></ngx-ui-loader>\r\n\r\n\r\n<!-- Loader Blur -->\r\n<div ngxUiLoaderBlurred blur=\"10\">\r\n    <!-- This page content will be blurred/frosted when foreground loader is showed -->\r\n\r\n    <!-- Static Content -->\r\n    <app-navbar></app-navbar>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-about-quiz',\r\n  templateUrl: './about-quiz.component.html',\r\n  styleUrls: ['./about-quiz.component.css']\r\n})\r\nexport class AboutQuizComponent implements OnInit {\r\n\r\n  // Local Variable\r\n  qid;\r\n  viewQuizData;\r\n\r\n  constructor(\r\n    private _route:ActivatedRoute,\r\n    private _quizService:QuizService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.qid = this._route.snapshot.params.qid;\r\n    console.log(this.qid);\r\n    \r\n    //method calling when ng init loading\r\n    this.loadingQuizData(this.qid);\r\n  }\r\n\r\n  loadingQuizData(qid){\r\n\r\n    this._quizService.getSingleQuiz(qid).subscribe(\r\n      (data:any)=>{\r\n        //success\r\n        this.viewQuizData = data;\r\n        console.log(this.viewQuizData);\r\n      },\r\n      (error)=>{\r\n        //error\r\n        Swal.fire('Error' , 'Server error while loading data', 'error');\r\n\r\n      },\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-card class=\"mt20\">\r\n                    <mat-card-header>\r\n                        <!-- Heading -->\r\n                        <mat-card-title>\r\n                            <!-- Title -->\r\n                            Read Quiz Details!!!\r\n                        </mat-card-title>\r\n                        <mat-card-subtitle>\r\n                            <!-- Sub Title -->\r\n                            Every questions have 2 min only\r\n                        </mat-card-subtitle>\r\n                    </mat-card-header>\r\n                    <mat-card-content class=\"ml20\">\r\n                        <!-- Content -->\r\n                        <h1> {{viewQuizData.title}}</h1>\r\n                        <p>{{viewQuizData.description}}</p>\r\n                        <mat-divider></mat-divider>\r\n\r\n                        <br/>\r\n\r\n                        <h1>Question Details</h1>\r\n                        <ul>\r\n                            <li>Total Questions: <b>{{viewQuizData.numberOfQuestions}}</b></li>\r\n                            <li>Total Marks: <b>{{viewQuizData.maxMarks}}</b> </li>\r\n\r\n                        </ul>\r\n\r\n                        <h1>Marks Details</h1>\r\n\r\n                        <ul>\r\n                            <!--Every questions have 2 min only -->\r\n                            <li>Total time to solve Time is : <b>{{viewQuizData.numberOfQuestions * 2}}</b></li>\r\n                            <li>No Of Questions : <b>{{viewQuizData.numberOfQuestions}}</b> </li>\r\n                            <li>Each question carries : <b>{{viewQuizData.maxMarks /viewQuizData.numberOfQuestions}}</b> </li>\r\n                        </ul>\r\n\r\n                        <mat-divider></mat-divider>\r\n                        <br/>\r\n\r\n                    </mat-card-content>\r\n                    <mat-card-actions class=\"text-center\">\r\n                        <!-- Action -->\r\n                        <button mat-raised-button color=\"accent\" [routerLink]=\"'/user-dashboard/instructions/'+viewQuizData.qid\">Go</button>\r\n                    </mat-card-actions>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  public getQuestionsOfQuiz(qid) {\r\n    return this._http.get(`${baseUrl}/question/quiz/all/${qid}`);\r\n  }\r\n\r\n  public getQuestionsOfQuizByIdAndTest(qid) {\r\n    return this._http.get(`${baseUrl}/question/quiz/${qid}`);\r\n  }\r\n\r\n\r\n  //add questions\r\n  public addQuestion(questions){\r\n    return this._http.post(`${baseUrl}/question/`,questions);\r\n  }\r\n\r\n  //getting particular question from the sever by using Id\r\n  public particularQuestionById(quesId){\r\n    return this._http.get(`${baseUrl}/question/${quesId}`);\r\n  }\r\n\r\n  //question update\r\n  public updateQuestionById(questions){\r\n    return this._http.post(`${baseUrl}/question/`,questions);\r\n  }\r\n\r\n  //delete particular question by Id\r\n  public deletingParticularQuestion(quesId){\r\n    return this._http.delete(`${baseUrl}/question/${quesId}`);\r\n  }\r\n\r\n  //to validate questions answers call to server and check questions answer on sever\r\n  public validateQuestionsAndAnswer(questions){\r\n    return this._http.post(`${baseUrl}/question/eval-quiz`,questions);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-category',\r\n  templateUrl: './add-category.component.html',\r\n  styleUrls: ['./add-category.component.css']\r\n})\r\nexport class AddCategoryComponent implements OnInit {\r\n\r\n  constructor(private _categoryService : CategoryService ,private _snackbar :MatSnackBar) { }\r\n\r\n  category = {\r\n    title: '',\r\n    description:'',\r\n  };\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  //add category form submit method\r\n\r\n  addCategoryFormSubmit(){\r\n\r\n    if(this.category.title == '' || this.category.description == null){\r\n      this._snackbar.open(\"category title required!!!!\",\"ok\",{\r\n        duration:3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(this.category.description =='' || this.category.description == null){\r\n      this._snackbar.open(\"category description required!!!\",\"ok\",{\r\n        duration:3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this._categoryService.addCategory(this.category).subscribe(\r\n      //success\r\n      (data:any)=>{\r\n        this.category.title = '';\r\n        this.category.description = '';\r\n        Swal.fire(\"Success\" , \"Category added successfully!!!\" , \"success\");\r\n      },\r\n      (error)=>{\r\n        //Error\r\n        Swal.fire(\"Oop's\" ,\"Server Error Try Again!!!\" , \"error\");\r\n      });\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <h1>Add New Category</h1>\r\n    <!-- {{category | json}} -->\r\n    <mat-card-content>\r\n        <div class=\"bootstrap-wrapper\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-8 offset-md-2\">\r\n                    <form (ngSubmit)=\"addCategoryFormSubmit()\">\r\n                        <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                            <mat-label>Title</mat-label>\r\n\r\n                            <input required [(ngModel)]=\"category.title\" autofocus type=\"text\" name=\"title\" matInput placeholder=\"Enter here..........\" />\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                            <mat-label>Description</mat-label>\r\n                            <textarea required [(ngModel)]=\"category.description\" type=\"text\" name=\"title\" rows=\"15\" matInput placeholder=\"Enter Category Description here.........\"></textarea>\r\n                        </mat-form-field>\r\n\r\n                        <div class=\"container text-center\">\r\n\r\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Add</button>\r\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>","<mat-card *ngIf=\"user\">\r\n    <h2>Your Profile Details</h2>\r\n    <!-- {{user | json}} -->\r\n    <mat-card-content>\r\n\r\n        <div class=\"bootstarp-wrapper\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"card col-md-5\">\r\n                        <!-- <img src=\"../../../assets/default.png\" alt=\"\" style=\"width:100%\"> -->\r\n                        <div class=\"flip-box\">\r\n                            <div class=\"flip-box-inner\">\r\n                                <div class=\"flip-box-front text\">\r\n\r\n                                    <img src=\"../../../assets/default.png\" alt=\"\" style=\"width:100%\">\r\n                                </div>\r\n                                <div class=\"flip-box-back\">\r\n\r\n                                    <img src=\"../../../assets/user_profile.png\" alt=\"\" style=\"width:297\" height=\"297\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <h1>{{user.firstName}} {{user.lastName}}</h1>\r\n                        <p class=\"title\">Software Engineer</p>\r\n                        <p>Harvard University</p>\r\n\r\n                        <p><button class=\"button1\">Contact</button></p>\r\n                    </div>\r\n\r\n                    <!-- User Detail -->\r\n                    <div class=\"col-md-5\">\r\n\r\n                        <mat-card>\r\n                            <mat-card-subtitle>User Name</mat-card-subtitle>\r\n                            <mat-card-content>\r\n                                <mat-card-title>\r\n                                    {{user.username}}\r\n                                </mat-card-title>\r\n                            </mat-card-content>\r\n\r\n                            <mat-divider></mat-divider>\r\n                            <mat-card-subtitle>User Id</mat-card-subtitle>\r\n                            <mat-card-content>\r\n                                <mat-card-title>\r\n                                    Exam{{user.id}}\r\n                                </mat-card-title>\r\n                            </mat-card-content>\r\n\r\n                            <mat-divider></mat-divider>\r\n                            <mat-card-subtitle>Phone Number</mat-card-subtitle>\r\n                            <mat-card-content>\r\n                                <mat-card-title>\r\n                                    {{user.phone}}\r\n                                </mat-card-title>\r\n                            </mat-card-content>\r\n\r\n                            <mat-divider></mat-divider>\r\n                            <mat-card-subtitle>Role</mat-card-subtitle>\r\n                            <mat-card-content>\r\n                                <mat-card-title>\r\n                                    {{user.authorities[0].authority}}\r\n                                </mat-card-title>\r\n                            </mat-card-content>\r\n\r\n                            <mat-divider></mat-divider>\r\n                            <mat-card-subtitle>Status</mat-card-subtitle>\r\n                            <mat-card-content>\r\n                                <mat-card-title>\r\n                                    {{user.enabled?\"Active\":\"Not Active\"}}\r\n                                </mat-card-title>\r\n                            </mat-card-content>\r\n\r\n                            <!-- Button -->\r\n                            <mat-card-actions class=\"text-center\">\r\n                                <button mat-raised-button color=\"primary\">Update</button>\r\n                                <button mat-raised-button color=\"accent\">Share</button>\r\n                            </mat-card-actions>\r\n                        </mat-card>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-2\">\r\n                        <mat-card>\r\n                            <mat-card-subtitle>\r\n                                Social Media\r\n                            </mat-card-subtitle>\r\n                            <mat-card-content>\r\n                                <button class=\"button2 fb\">Facebook</button>\r\n                                <mat-divider></mat-divider>\r\n                                <button class=\"button2 whatsapp mt20\">Whatsapp</button>\r\n                                <mat-divider></mat-divider>\r\n                                <button class=\"button2 linkedin mt20\">Linkdlen</button>\r\n                                <mat-divider></mat-divider>\r\n                                <button class=\"button2 twitter mt20\">Tiwtter</button>\r\n                                <mat-divider></mat-divider>\r\n                                <button class=\"button2 google mt20\">Gmail</button>\r\n                                <mat-divider></mat-divider>\r\n                                <!-- <button class=\"button2  mt20\">Helo</button>\r\n                                <mat-divider></mat-divider>\r\n                                <button class=\"button2  mt20\">Helo</button> -->\r\n\r\n                            </mat-card-content>\r\n                        </mat-card>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  user = null;\r\n\r\n  constructor(private loginService:LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    //data fetch from local Storage\r\n    // this.user = this.loginService.getUser();\r\n\r\n    //data fetch from server\r\n    this.loginService.getCurrentUser().subscribe(\r\n      (user: any)=>{\r\n        this.user= user;\r\n      },\r\n      (error)=>{\r\n        console.log(error);\r\n      },\r\n    )\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NavbarComponent } from './componets/navbar/navbar.component';\r\nimport { FooterComponent } from './componets/footer/footer.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {  MatIconModule } from '@angular/material/icon';\r\nimport { AuthInterceptorProviders } from './services/auth.interceptor';\r\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\r\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { SidebarComponent } from './pages/admin/sidebar/sidebar.component';\r\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\r\nimport { Error404Component } from './pages/errorpage/error404/error404.component';\r\nimport { ViewCategoriesComponent } from './pages/admin/view-categories/view-categories.component';\r\nimport { AddCategoryComponent } from './pages/admin/add-category/add-category.component';\r\nimport { ViewQuizzesComponent } from './pages/admin/view-quizzes/view-quizzes.component';\r\nimport { AddQuizComponent } from './pages/admin/add-quiz/add-quiz.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { UpdateQuizComponent } from './pages/admin/update-quiz/update-quiz.component';\r\nimport { ViewQuizQuestionsComponent } from './pages/admin/view-quiz-questions/view-quiz-questions.component';\r\nimport { AddQuestionsComponent } from './pages/admin/add-questions/add-questions.component';\r\nimport { UpdateQuestionComponent } from './pages/admin/update-question/update-question.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { SidebarComponent as UserSidebar } from './pages/user/sidebar/sidebar.component';\r\nimport { NgxChartsModule }from '@swimlane/ngx-charts';\r\nimport { LoadQuizComponent } from './pages/user/load-quiz/load-quiz.component';\r\nimport { InstructionsComponent } from './pages/user/instructions/instructions.component';\r\nimport { StartComponent } from './pages/user/start/start.component';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { NgxUiLoaderHttpModule, NgxUiLoaderModule } from \"ngx-ui-loader\";\r\nimport { UpdateCategoryComponent } from './pages/admin/update-category/update-category.component';\r\nimport { AboutQuizComponent } from './pages/user/about-quiz/about-quiz.component';\r\n\r\n// import { MatTableModule } from '@angular/material/table';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    FooterComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    UserDashboardComponent,\r\n    ProfileComponent,\r\n    SidebarComponent,\r\n    WelcomeComponent,\r\n    Error404Component,\r\n    ViewCategoriesComponent,\r\n    AddCategoryComponent,\r\n    ViewQuizzesComponent,\r\n    AddQuizComponent,\r\n    UpdateQuizComponent,\r\n    ViewQuizQuestionsComponent,\r\n    AddQuestionsComponent,\r\n    UpdateQuestionComponent,\r\n    UserSidebar,\r\n    LoadQuizComponent,\r\n    InstructionsComponent,\r\n    StartComponent,\r\n    UpdateCategoryComponent,\r\n    AboutQuizComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatSlideToggleModule,\r\n    MatSelectModule,\r\n    CKEditorModule,\r\n    NgxChartsModule,\r\n    MatProgressSpinnerModule,\r\n    NgxUiLoaderModule,\r\n    NgxUiLoaderHttpModule.forRoot({\r\n      showForeground:true,\r\n    }),\r\n    // MatTableModule,\r\n    \r\n  ],\r\n  providers: [AuthInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.css']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-2\">\r\n\r\n                <app-sidebar-user></app-sidebar-user>\r\n            </div>\r\n            <div class=\"col-md-10\">\r\n                <!-- Use for content view same page -->\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n   //Chart Data \r\n   saleData = [\r\n    { name: \"Mobiles\", value: 105000 },\r\n    { name: \"Laptop\", value: 55000 },\r\n    { name: \"AC\", value: 15000 },\r\n    { name: \"Headset\", value: 150000 },\r\n    { name: \"Fridge\", value: 20000 }\r\n  ];\r\n\r\n  cardList = [\r\n    {\r\n      cid:23,\r\n      title:\"programming\",\r\n    },\r\n\r\n    {\r\n      cid:23,\r\n      title:\"programming\",\r\n    },\r\n\r\n    {\r\n      cid:23,\r\n      title:\"programming\",\r\n    },\r\n\r\n    {\r\n      cid:23,\r\n      title:\"programming\",\r\n    },\r\n  ];\r\n    //this is a variable that hold number\r\n    users= 0;\r\n    //same process\r\n    accuratecount:number = 0;\r\n    clientcount:number = 0;\r\n    customerfeedback:number = 0;\r\n\r\n  constructor(private loginService:LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.loginService.getUserCount().subscribe(\r\n      (data: any)=>{\r\n        // console.log(userList);\r\n        this.users=data;\r\n      },\r\n      (error) =>{\r\n        console.log(error);\r\n      },\r\n    );\r\n    \r\n  }\r\n  //we have created setinterval function with arrow function and\r\n  //and set them in a variable that is projectcountstop.\r\n  projectcountstop:any = setInterval(()=>{\r\n    this.users++;\r\n    //we need to stop this at  particular point; will use if condition\r\n    if(this.users == this.users)\r\n    {\r\n      //clearinterval will stop tha function\r\n      clearInterval(this.projectcountstop);\r\n    }\r\n\r\n  },10) //10 is milisecond you can control it\r\n\r\n\r\n  accuratecountstop:any = setInterval(()=>{\r\n    this.accuratecount++;\r\n    if(this.accuratecount == 97)\r\n    {\r\n      \r\n      clearInterval(this.accuratecountstop);\r\n    }\r\n  },10) \r\n\r\n\r\n  clientcountstop:any = setInterval(()=>{\r\n    this.clientcount++;\r\n    if(this.clientcount == 5000)\r\n    {\r\n      \r\n      clearInterval(this.clientcountstop);\r\n    }\r\n  },10)\r\n\r\n  customerfeedbackstop:any = setInterval(()=>{\r\n    this.customerfeedback++;\r\n    if(this.customerfeedback == 100)\r\n    {\r\n      \r\n      clearInterval(this.customerfeedbackstop);\r\n    }\r\n  },10)\r\n\r\n  //conclusion: we have use\r\n  //string interpolation\r\n  //setInterval function\r\n  //()=> arrow function\r\n  //clearInterval \r\n  //creating variable\r\n\r\n\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n\r\n\r\n    <div class=\"container-fluid\">\r\n\r\n        <div class=\"row mt20\">\r\n\r\n            <div class=\"col-md-8\">\r\n                <mat-card>\r\n                    <mat-card-title>User Progress</mat-card-title>\r\n                    <p class=\"text-center\">HTML</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"skills html\">90%</div>\r\n                    </div>\r\n\r\n                    <p class=\"text-center\">CSS</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"skills css\">80%</div>\r\n                    </div>\r\n\r\n                    <p class=\"text-center\">JavaScript</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"skills js\">65%</div>\r\n                    </div>\r\n\r\n                    <p class=\"text-center\">PHP</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"skills php\">100%</div>\r\n                    </div>\r\n\r\n                </mat-card>\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"col-md-4\">\r\n                <mat-card>\r\n\r\n                </mat-card>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- second row  -->\r\n\r\n        <div class=\"row mt20\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <mat-card>\r\n                    <mat-card-title>New User</mat-card-title>\r\n                    <p class=\"text-center\">HTML</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"skills html\">90%</div>\r\n                    </div>\r\n\r\n                    <p class=\"text-center\">CSS</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"skills css\">80%</div>\r\n                    </div>\r\n\r\n                    <p class=\"text-center\">JavaScript</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"skills js\">65%</div>\r\n                    </div>\r\n\r\n                    <p class=\"text-center\">PHP</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"skills php\">100%</div>\r\n                    </div>\r\n\r\n                </mat-card>\r\n            </div>\r\n\r\n            <!-- second row  -->\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  constructor(private _http:HttpClient) { }\r\n\r\n  // load all the categories\r\n  public categories(){\r\n    return this._http.get(`${baseUrl}/category/`);\r\n  }\r\n\r\n  // Add category\r\n  public addCategory(category){\r\n\r\n    return this._http.post(`${baseUrl}/category/`, category);\r\n  }\r\n\r\n  // delete category\r\n  public deleteCategory(cid){\r\n    return this._http.delete(`${baseUrl}/category/${cid}`);\r\n  }\r\n  // get category by id\r\n  public getCategoryById(cid){\r\n    return this._http.get(`${baseUrl}/category/${cid}`);\r\n  }\r\n\r\n  // updating category \r\n  public updatingCategory(category){\r\n    return this._http.put(`${baseUrl}/category/`,category);\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-view-categories',\r\n  templateUrl: './view-categories.component.html',\r\n  styleUrls: ['./view-categories.component.css']\r\n})\r\nexport class ViewCategoriesComponent implements OnInit {\r\n\r\n  constructor( private _categories:CategoryService) { }\r\n\r\n  // Category data in array format\r\n  categories = [\r\n    // Dummy Data\r\n    // {\r\n    //   id:23,\r\n    //   title:\"Programming\",\r\n    //   description:\"This is testing purpose\",\r\n    // },\r\n\r\n    // {\r\n    //   id:24,\r\n    //   title:\"Matmatices\",\r\n    //   description:\"This is testing purpose\",\r\n    // },\r\n\r\n    // {\r\n    //   id:25,\r\n    //   title:\"General Knowledge\",\r\n    //   description:\"This is testing purpose\",\r\n    // },\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    this._categories.categories().subscribe(\r\n      (data: any)=>{\r\n      //success\r\n      this.categories = data;\r\n      // console.log(this.categories);\r\n    },\r\n    (error)=>{\r\n      //error\r\n      console.log(error);\r\n      Swal.fire(\"Error\",\"Error in Lodaing data from the server\",'error');\r\n    });\r\n  }\r\n\r\n  // Delete Category\r\n  deleteCategory(cid){\r\n    \r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Are you sure ?',\r\n      confirmButtonText: 'Delete',\r\n      showCancelButton: true,\r\n    }).then((result) => {\r\n\r\n      if (result.isConfirmed) {\r\n\r\n        //delete here\r\n        this._categories.deleteCategory(cid).subscribe(\r\n          (data) => {\r\n            //quiz filter after deleting\r\n            this.categories = this.categories = this.categories.filter((category) => category.cid != cid);\r\n            // console.log(cid);\r\n            // console.log(this.categories);\r\n            //success\r\n            Swal.fire('Success', 'Category deleted!!', 'success');\r\n          },\r\n          (error) => {\r\n            //error\r\n            Swal.fire('Error', 'Error in deleting Category', 'error');\r\n          },\r\n        );\r\n\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"bootstarp-wrapper\">\r\n    <div class=\"container-fluid\">\r\n        <h1 class=\"mt20\">Available Category</h1>\r\n        <div class=\"row\" mt20 *ngIf=\"categories\">\r\n            <div class=\"col-md-6\" *ngFor=\"let c of categories\">\r\n                <mat-card class=\"mb20\">\r\n                    <mat-card-header>\r\n                        <div mat-card-avatar class=\"example-header-image\"> </div>\r\n                        <mat-card-title>\r\n                            {{c.title}}\r\n                        </mat-card-title>\r\n                        <mat-card-subtitle>\r\n                            {{c.title}}\r\n                        </mat-card-subtitle>\r\n                    </mat-card-header>\r\n                    <mat-card-content>\r\n                        <p class=\"truncate\">{{c.description}}</p>\r\n                    </mat-card-content>\r\n\r\n                    <mat-card-actions>\r\n                        <!-- <button mat-button color=\"primary\" [routerLink]=\"'/user-dashboard/about-quiz/'+q.qid\"> View</button> -->\r\n                        <button mat-raised-button color=\"primary\" class=\"ml20\" [routerLink]=\"'/admin/category/'+c.cid\">Update</button>\r\n                        <button mat-raised-button color=\"accent\" class=\"ml20\" (click)=\"deleteCategory(c.cid)\">Delete</button>\r\n                    </mat-card-actions>\r\n                </mat-card>\r\n            </div>\r\n            <div class=\"col-md-12\" *ngIf=\"categories.length==0\">\r\n                <mat-card>\r\n                    <mat-card-content class=\"text-center\">\r\n                        <h1>No Category Available</h1>\r\n                    </mat-card-content>\r\n\r\n                    <mat-card-actions class=\"text-center\">\r\n                        <button mat-raised-button color=\"primary\" [routerLink]=\"'/admin/add-category'\"> Add New Category</button>\r\n                    </mat-card-actions>\r\n\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  //constructor\r\n  constructor(private loginService: LoginService, private router: Router){\r\n    \r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n   \r\n      if (this.loginService.isLoggedIn() && this.loginService.getUserRole() == \"ADMIN\"){\r\n\r\n        //redirect Admin page\r\n        return true;\r\n      }// otherwise again redirect login page\r\n      this.router.navigate(['login']);\r\n   \r\n      return false;\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-category',\r\n  templateUrl: './update-category.component.html',\r\n  styleUrls: ['./update-category.component.css']\r\n})\r\nexport class UpdateCategoryComponent implements OnInit {\r\n\r\n  // local variable\r\n  cid;\r\n  catUpdateData;\r\n\r\n  constructor(\r\n    private _route:ActivatedRoute,\r\n    private _categoryService: CategoryService,\r\n    private _snackbar:MatSnackBar,\r\n    private _router:Router,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    //Now get id from url with help of _route\r\n    this.cid = this._route.snapshot.params.cid;\r\n    console.log(this.cid);\r\n    this._categoryService.getCategoryById(this.cid).subscribe(\r\n      (data)=>{\r\n        //success\r\n        this.catUpdateData = data;\r\n        // console.log(this.catUpdateData);\r\n      },\r\n      (error)=>{\r\n        //error\r\n        Swal.fire('Error' , 'Server error while loading data!!' , 'error');\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  updateCategoryONFormSubmit(){\r\n    \r\n    if(this.catUpdateData.title == '' || this.catUpdateData.description == null){\r\n      this._snackbar.open(\"category title required!!!!\",\"ok\",{\r\n        duration:3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(this.catUpdateData.description =='' || this.catUpdateData.description == null){\r\n      this._snackbar.open(\"category description required!!!\",\"ok\",{\r\n        duration:3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n// calling server to updatiing category\r\n\r\n    this._categoryService.updatingCategory(this.catUpdateData).subscribe(\r\n      (data)=>{\r\n        //success\r\n       this.catUpdateData.title = '';\r\n       this.catUpdateData.description = '';\r\n\r\n        Swal.fire('Success' ,'category updated' ,'success').then((e)=>{\r\n              //clicking ok then navigate to view Category Page\r\n              this._router.navigate(['/admin/categories']);\r\n        });\r\n       \r\n      },\r\n      (error)=>{\r\n        //error\r\n        Swal.fire('Error' ,'Error while updating category' ,'error');\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <h1>Update Category</h1>\r\n    <!-- {{catUpdateData | json}} -->\r\n    <mat-card-content>\r\n        <div class=\"bootstrap-wrapper\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-8 offset-md-2\">\r\n                    <form (ngSubmit)=\"updateCategoryONFormSubmit()\">\r\n                        <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                            <mat-label>Title</mat-label>\r\n\r\n                            <input required [(ngModel)]=\"catUpdateData.title\" autofocus type=\"text\" name=\"title\" matInput placeholder=\"Enter here..........\" />\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                            <mat-label>Description</mat-label>\r\n                            <textarea required [(ngModel)]=\"catUpdateData.description\" type=\"text\" name=\"description\" rows=\"15\" matInput placeholder=\"Enter Category Description here.........\"></textarea>\r\n                        </mat-form-field>\r\n\r\n                        <div class=\"container text-center\">\r\n\r\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Update</button>\r\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-user',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  categories;\r\n  constructor(private _categoryService:CategoryService) { }\r\n\r\n  ngOnInit(): void {\r\n    // on Loading init method data loaded\r\n    this._categoryService.categories().subscribe(\r\n      (data:any)=>{\r\n        // Success \r\n        this.categories = data;\r\n        console.log(\" data is \" ,this.categories);\r\n\r\n      },\r\n      (error)=>{\r\n        // Error\r\n        Swal.fire(\"Error\",\"Server Error while loading Categories\",\"error\");\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n\r\n    <mat-action-list>\r\n\r\n        <div mat-subheader>Available Categories</div>\r\n\r\n        <button mat-list-item routerLink=\"/user-dashboard/0\">\r\n            <mat-icon mat-list-icon>grid_view</mat-icon>\r\n            All Quizzes\r\n        </button>\r\n\r\n        <button [routerLink]=\"'/user-dashboard/'+c.cid\" mat-list-item *ngFor=\"let c of categories\">\r\n            <mat-icon mat-list-icon>quiz</mat-icon>\r\n            {{c.title}}\r\n        </button>\r\n    </mat-action-list>\r\n\r\n</mat-card>\r\n\r\n<!-- {{categories | json}} -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error404',\r\n  templateUrl: './error404.component.html',\r\n  styleUrls: ['./error404.component.css']\r\n})\r\nexport class Error404Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n\r\n    <div class=\"bootstrap-wrapper\">\r\n\r\n        <div class=\"container\">\r\n\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col md-10\">\r\n                    <div class=\"stage\">\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n                        <div class=\"layer\"></div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-quiz',\r\n  templateUrl: './update-quiz.component.html',\r\n  styleUrls: ['./update-quiz.component.css']\r\n})\r\nexport class UpdateQuizComponent implements OnInit {\r\n\r\n  qId = 0;//undefined\r\n  quiz;\r\n  categories;\r\n\r\n\r\n  //ActivatedRoute predefined \r\n  constructor(\r\n    private _route : ActivatedRoute,\r\n    private _quizService :QuizService, \r\n    private _categoryService: CategoryService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.qId = this._route.snapshot.params.qid;\r\n    // console.log(this.qId);\r\n    this._quizService.getSingleQuiz(this.qId).subscribe(\r\n      (data:any)=>{\r\n        //success\r\n        this.quiz = data;\r\n        console.log(this.quiz);\r\n    },\r\n    (error)=>{\r\n      //error\r\n      console.log(error);\r\n    });\r\n\r\n    this._categoryService.categories().subscribe(\r\n      (data:any)=>{\r\n        //loading categories from server\r\n        this.categories = data;\r\n        console.log(this.categories);\r\n      },\r\n      (error)=>{\r\n        //error\r\n        console.log(error);\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  //update quiz\r\n  public updateQuiz(){\r\n\r\n        if (this.quiz.title.trim() == '' || this.quiz.title == null){\r\n          this._snackBar.open('title is required!!','ok',{\r\n            duration:3000,\r\n          });\r\n          return;\r\n      }\r\n\r\n      if (this.quiz.description.trim() == '' || this.quiz.description == null){\r\n        this._snackBar.open('description is required!!','ok',{\r\n          duration:3000,\r\n        });\r\n        return;\r\n    }\r\n\r\n    if (this.quiz.maxMarks.trim() == '' || this.quiz.maxMarks == null){\r\n      this._snackBar.open('Max Marks is required!!','ok',{\r\n        duration:3000,\r\n      });\r\n      return;\r\n    }\r\n    if (this.quiz.numberOfQuestions.trim() == '' || this.quiz.numberOfQuestions == null){\r\n      this._snackBar.open('Number of questions is required!!','ok',{\r\n        duration:3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.quiz.category.cid == '' || this.quiz.category.cid == null){\r\n    this._snackBar.open('category is required!!','ok',{\r\n      duration:3000,\r\n    });\r\n    return;\r\n    }  \r\n\r\n    //Now calling server to update quiz\r\n    this._quizService.updatingQuizById(this.quiz).subscribe(\r\n      (data:any)=>{\r\n        //success\r\n          this.quiz.title = '',\r\n          this.quiz.description = '',\r\n          this.quiz.maxMarks = '',\r\n          this.quiz.numberOfQuestions = '',\r\n          this.quiz.category.cid = '',\r\n        Swal.fire('Success', 'Quiz updated..', 'success').then((e)=>{\r\n          //clicking ok then navigate to view quiz\r\n          this.router.navigate(['/admin/quizzes']);\r\n        });\r\n      },\r\n      (error)=>{\r\n        //error\r\n        Swal.fire('Error', 'Server error while updating quiz','error');\r\n      });\r\n}\r\n\r\n}\r\n","<mat-card>\r\n    <h1>Update Quiz</h1>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col md 8 offset-md-2\">\r\n                <form *ngIf=\"quiz\" (ngSubmit)=\"updateQuiz()\">\r\n\r\n                    <!-- title field -->\r\n                    <mat-form-field appearance=\"outline\" class=\"w100\">\r\n                        <mat-label>Enter Title</mat-label>\r\n                        <input [(ngModel)]=\"quiz.title\" type=\"text\" name=\"title\" placeholder=\"Enter Here.....\" matInput>\r\n                    </mat-form-field>\r\n\r\n                    <!-- description field -->\r\n                    <mat-form-field appearance=\"outline\" class=\"w100\">\r\n                        <mat-label>Enter Description</mat-label>\r\n                        <textarea [(ngModel)]=\"quiz.description\" type=\"text\" rows=\"10\" name=\"description placeholder=\" matInput Enter description Here.....></textarea>\r\n                    </mat-form-field>\r\n\r\n                    <div class=\"row\">\r\n                        <!-- maxmium Marks  -->\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w100\">\r\n                                <mat-label>Maximum Marks</mat-label>\r\n                                <input [(ngModel)]=quiz.maxMarks type=\"text\" name=\"maxMarks\" placeholder=\"Enter Here.....\" matInput>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <!-- number of questions to be displayed -->\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w100\">\r\n                                <mat-label>Number of Questions</mat-label>\r\n                                <input [(ngModel)]=quiz.numberOfQuestions type=\"text\" name=\"numberOfQuestions\" placeholder=\"Enter Here.....\" matInput>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <!-- Select Category  -->\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field appearance=\"fill\" class=\"w50\">\r\n                                <mat-label>Categories</mat-label>\r\n                                <mat-select name=\"category\" [(ngModel)]=\"quiz.category.cid\">\r\n                                    <mat-option *ngFor=\"let c of categories\" [value]=\"c.cid\">\r\n                                        {{c.title}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <!-- Quiz Status Enable or disable -->\r\n                        <div class=\"col-md-6\">\r\n                            <mat-slide-toggle name=\"active\" class=\"mt20\" [(ngModel)]=\"quiz.active\">\r\n                                Publish Status\r\n                            </mat-slide-toggle>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\" container text-center \">\r\n                        <button mat-raised-button color=\"accent\">Update Quiz</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-card>\r\n\r\n<!-- {{quiz | json}} -->","// const baseUrl = 'https://spring-angular-project.herokuapp.com';\r\nconst baseUrl = 'http://localhost:8080';\r\nexport default baseUrl;\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user.service'\r\nimport { MatSnackBar } from '@angular/material/snack-bar'\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService, private snack: MatSnackBar) { }\r\n\r\n  // User Binding Object\r\n  public user = {\r\n    username: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n\r\n  };\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // Form Submit\r\n  formSubmit() {\r\n    console.log(this.user)\r\n\r\n    // Validations\r\n\r\n    if (this.user.username == '' || this.user.username == null) {\r\n      // alert(\"Username Required!!\")\r\n      this.snack.open(\"Username is required!!\", 'ok', {\r\n        duration: 3000,\r\n        // verticalPosition:'top'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.user.password == '' || this.user.password == null) {\r\n      this.snack.open(\"password is required!!\", 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.user.firstName == '' || this.user.firstName == null) {\r\n      this.snack.open(\"firstName is required!!\", 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.user.lastName == '' || this.user.lastName == null) {\r\n      this.snack.open(\"lastName is required!!\", 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.user.email == '' || this.user.email == null) {\r\n      this.snack.open(\"email address is required!!\", 'ok', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n      if (this.user.phone == '' || this.user.phone == null) {\r\n        this.snack.open(\"phone number is required!!\", 'ok', {\r\n          duration: 3000,\r\n        });\r\n        return;\r\n      }\r\n\r\n      // AddUser Method Calling From UserServices\r\n      this.userService.addUser(this.user).subscribe(\r\n        (data:any) => {\r\n          //Success\r\n          console.log(data)\r\n          // alert(\"Success\")\r\n          Swal.fire(\"Succcessfully done!!\",\"User is succcessfully registered and id is  \" + data.id ,\"success\")\r\n        },\r\n        (error) => {\r\n          //Error\r\n          console.log(error)\r\n          // alert(\"Something went to wrong!!!\")\r\n          // this.snack.open(\"Something went wrong!!!\",'ok',{\r\n          //   duration: 3000,\r\n          // });\r\n         Swal.fire(\"Oops...\", error.error.text,\"error\")\r\n          // this.snack.open(error.error.text,\"ok\");\r\n        }\r\n      );\r\n\r\n    }\r\n\r\n  }\r\n","<div class=\"bootstrap-wrapper\">\r\n\r\n    <div class=\"container\">\r\n\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-6 offset-md-3\">\r\n\r\n                <mat-card>\r\n                    <div class=\"container text-center\">\r\n\r\n                        <img src=\"../../../assets/register1.png\" width=\"150px\" height=\"150px\" alt=\"\">\r\n\r\n                    </div>\r\n\r\n                    <h1 class=\"text-center\">Register Here!!</h1>\r\n\r\n                    <!-- Show data above the form -->\r\n                    <!-- {{user | json }} -->\r\n\r\n                    <form (ngSubmit)=\"formSubmit()\">\r\n                        <!--Username field-->\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>User Name</mat-label>\r\n                            <input required [(ngModel)]=\"user.username\" name=\"username\" matInput placeholder=\"Enter Here!\">\r\n                            <mat-hint>User Name must be unique !!</mat-hint>\r\n                        </mat-form-field>\r\n\r\n                        <!--Password field-->\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>Password</mat-label>\r\n                            <input required [(ngModel)]=\"user.password\" name=\"password\" type=\"password\" matInput placeholder=\"Enter Here!\">\r\n                        </mat-form-field>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <!--Firstname field-->\r\n                                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                    <mat-label>First Name</mat-label>\r\n                                    <input required [(ngModel)]=\"user.firstName\" name=\"firstName\" matInput placeholder=\"Enter Here!\">\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <!--Lastname field-->\r\n                                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                    <mat-label>Last Name</mat-label>\r\n                                    <input required [(ngModel)]=\"user.lastName\" name=\"lastName\" matInput placeholder=\"Enter Here!\">\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!--Email field-->\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>Email Address</mat-label>\r\n                            <input required [(ngModel)]=\"user.email\" name=\"email\" type=\"email\" matInput placeholder=\"Enter Here!\">\r\n                        </mat-form-field>\r\n\r\n                        <!--Phone field-->\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>Phone Number</mat-label>\r\n                            <input required [(ngModel)]=\"user.phone\" name=\"phone\" type=\"number\" matInput placeholder=\"Enter Here!\">\r\n                        </mat-form-field>\r\n\r\n                        <div class=\"container text-center\">\r\n\r\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Register</button>\r\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\r\n                        </div>\r\n                    </form>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuizService {\r\n\r\n  constructor(private _http :HttpClient) { }\r\n\r\n  //get all quizess from server(database)\r\n  public quizess(){\r\n    return this._http.get(`${baseUrl}/quiz/`);\r\n  }\r\n\r\n  //add quiz\r\n  public addingNewQuiz(quizData){\r\n    return this._http.post(`${baseUrl}/quiz/`,quizData);\r\n  }\r\n\r\n  //delete quiz\r\n  public quizDelete(qid){\r\n    return this._http.delete(`${baseUrl}/quiz/${qid}`);\r\n  }\r\n\r\n  //get the single quiz\r\n  public getSingleQuiz(qid){\r\n    return this._http.get(`${baseUrl}/quiz/${qid}`);\r\n  }\r\n\r\n  //update the quiz by Id\r\n  public updatingQuizById(quizUpdate){\r\n    return this._http.put(`${baseUrl}/quiz/`,quizUpdate);\r\n  }\r\n\r\n  // Get Specfic Quizzes by Category\r\n  public getQuizzesOfCategory(cid){\r\n    return this._http.get(`${baseUrl}/quiz/category/${cid}`);\r\n  }\r\n\r\n\r\n  // Get Active Quizzs\r\n  public getActiveQuzzes(){\r\n    return this._http.get(`${baseUrl}/quiz/active`);\r\n  }\r\n\r\n  public getActiveQuzzesOfCategory(cid){\r\n    return this._http.get(`${baseUrl}/quiz/active/category/${cid}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    // AutoWiring HttpClient\r\n    private http:HttpClient\r\n  ) { }\r\n\r\n  // Add User\r\n  public addUser(user:any){\r\n    return this.http.post(`${baseUrl}/user/`,user);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n\r\n    <div class=\"container-fluid\">\r\n\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-2\">\r\n                <app-sidebar></app-sidebar>\r\n            </div>\r\n\r\n            <div class=\"col-md-10\">\r\n                <!-- Use for content view same page -->\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { LocationStrategy } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuestionService } from 'src/app/services/question.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-start',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.css']\r\n})\r\nexport class StartComponent implements OnInit {\r\n\r\n  //Local variable\r\n  qid;\r\n  questions;\r\n\r\n  // Calculating marks\r\n  marksGot = 0;\r\n  correctAnswers = 0;\r\n  attempted  = 0;\r\n  isSubmit = false;\r\n  isTimer: any;\r\n\r\n  constructor(private _locationSt : LocationStrategy, private _route : ActivatedRoute,private _questionService: QuestionService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.qid = this._route.snapshot.params.qid;\r\n    this.loadQuestions();\r\n\r\n    this.preventBackButton();\r\n  }\r\n\r\n\r\n  loadQuestions() {\r\n    \r\n    this._questionService.getQuestionsOfQuizByIdAndTest(this.qid).subscribe(\r\n      (data:any)=>{\r\n        //success\r\n        this.questions = data;\r\n\r\n        // Timmer will start while questions is loading\r\n        this.isTimer = this.questions.length * 2 * 60;\r\n\r\n        // // add new key and value for user given answers\r\n        // this.questions.forEach((q)=>{\r\n        //   q['givenAnswer'] = '';\r\n        // });\r\n\r\n        console.log(this.questions);\r\n        //Start timer function here\r\n        this.startTimmer();\r\n      },\r\n      (error)=>{\r\n        //error\r\n        Swal.fire(\"Error\",\"Server error while loading questions\",\"error\");\r\n      },\r\n    );\r\n  }\r\n   //Prevent to back button\r\n   preventBackButton(){\r\n      \r\n    history.pushState(null,null,location.href);\r\n    this._locationSt.onPopState(()=>{\r\n      history.pushState(null,null,location.href);\r\n    });\r\n\r\n  }\r\n\r\n  // Submit Quiz and calculating\r\n  submitQuiz(){\r\n\r\n          Swal.fire({\r\n            title: 'Do you want submit quiz',\r\n            showCancelButton: true,\r\n            confirmButtonText:'Submit Quiz',\r\n            icon: 'warning',\r\n          }).then((e)=>{\r\n            if(e.isConfirmed){\r\n              // User manually submit quiz then ask confirmation before submited quiz\r\n              this.evalQuiz();\r\n            }\r\n          })\r\n  }\r\n\r\n  startTimmer(){\r\n    let t = window.setInterval(()=>{\r\n      //code\r\n      if(this.isTimer <=0){\r\n\r\n        // After Completing time quiz will submitedd automatically without confirmation\r\n        this.evalQuiz();\r\n        clearInterval(t);\r\n      }else{\r\n        this.isTimer--;\r\n      }\r\n    },1000);\r\n  }\r\n\r\n  //time formated\r\n  getFormatedTime(){\r\n    let min = Math.floor(this.isTimer / 60);\r\n    let sec = this.isTimer - min * 60;\r\n    return `${min} Min : ${sec} Sec`;\r\n    \r\n  }\r\n\r\n  evalQuiz() {\r\n               //calculations here\r\n              //  Call to server to check questions\r\n              this._questionService.validateQuestionsAndAnswer(this.questions).subscribe(\r\n                (data:any)=>{\r\n                  console.log(data);\r\n                  this.marksGot = parseFloat(Number(data.marksGot).toFixed(2));\r\n                  this.correctAnswers = data.correctAnswers;\r\n                  this.attempted = data.attempted;\r\n                  this.isSubmit = true;\r\n                  console.log(\"=====================> \" , this.correctAnswers);\r\n                },\r\n                (error)=>{\r\n                  //error\r\n                  console.log(error);\r\n                }\r\n              )\r\n\r\n        // this.isSubmit = true;\r\n    //             this.questions.forEach((q)=>{\r\n    //               if (q.givenAnswer == q.answer){\r\n    //                   this.correctAnswers++;\r\n    //                   let marksSingle = this.questions[0].quiz.maxMarks / this.questions.length;\r\n    //                   this.marksGot += marksSingle;\r\n    //               }\r\n    //               //Calculating attpemting questions\r\n    //               if(q.givenAnswer.trim() != ''){\r\n    //                  this.attempted++;\r\n    //               }\r\n    //             });\r\n                  // console.log(\"Correct Answers :\" + this.correctAnswers);\r\n                  // console.log('Marks got' + this.marksGot);\r\n                  // console.log('Question Attempted' + this.attempted++);\r\n                  // console.log(this.questions);\r\n  }\r\n\r\n\r\n  // Print Page\r\n  printPage(){\r\n    window.print();\r\n  } \r\n\r\n}\r\n\r\n\r\n","<div class=\"bootstrap-wrapper\" *ngIf=\"!isSubmit\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-2\">\r\n                <!-- Instrustions -->\r\n\r\n                <mat-card class=\"spinner_center\">\r\n                    <h3><b>Instrustions</b></h3>\r\n                    <mat-card-content>\r\n                        <ul>\r\n                            <li>Please Do not refresh page otherwise question will be lost and new questions will suffles</li>\r\n                            <li>Don't switch tab</li>\r\n                            <li>Don't minimize current window</li>\r\n                        </ul>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n\r\n\r\n            </div>\r\n            <div class=\"col-md-8\">\r\n                <!-- Questions -->\r\n                <ng-container *ngIf=\"questions\">\r\n                    <h1 class=\"mt20\">\r\n                        On Going Quiz <b>{{questions[0].quiz.title}}</b>\r\n                    </h1>\r\n                </ng-container>\r\n                <mat-card *ngFor=\"let q of questions; let i=index\" class=\"mt20\">\r\n                    <mat-card-content>\r\n                        <p><b>Q: {{i+1}})</b> <span [innerHTML]=\"q.content\"></span>\r\n                        </p>\r\n\r\n                        <mat-divider></mat-divider>\r\n\r\n                        <div class=\"row mt20\">\r\n                            <div class=\"col-md-6\">\r\n                                <input type=\"radio\" [(ngModel)]=\"q.givenAnswer\" [value]=\"q.option1\" [name]=\"i\" />{{q.option1}}\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <input type=\"radio\" [(ngModel)]=\"q.givenAnswer\" [value]=\"q.option2\" [name]=\"i\" />{{q.option2}}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row mt20\">\r\n                            <div class=\"col-md-6 \">\r\n                                <input type=\"radio\" [(ngModel)]=\"q.givenAnswer\" [value]=\"q.option3\" [name]=\"i\" />{{q.option3}}\r\n                            </div>\r\n                            <div class=\"col-md-6 \">\r\n                                <input type=\"radio\" [(ngModel)]=\"q.givenAnswer\" [value]=\"q.option4\" [name]=\"i\" />{{q.option4}}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </mat-card-content>\r\n                </mat-card>\r\n\r\n                <div class=\"container text-center mt20\">\r\n                    <button (click)=\"submitQuiz()\" mat-raised-button color=\"primary\">Submit Quiz</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"col-md-2 \">\r\n                <!-- Progress -->\r\n                <mat-card class=\"spinner_center\">\r\n                    <mat-card-header>\r\n                        <mat-card-title>\r\n                            Progress\r\n                            <mat-card-subtitle>\r\n                                Quiz will automatically submitted when timer reaches to\r\n                                <b>: 0.0</b>\r\n                            </mat-card-subtitle>\r\n                        </mat-card-title>\r\n                    </mat-card-header>\r\n                    <mat-card-content>\r\n                        <h1 class=\"text-center\">{{ getFormatedTime() }} </h1>\r\n                        <mat-spinner color=\"accent\" mode=\"determinate\" [value]=\"(isTimer / (this.questions.length * 2 * 60)) * 100\" class=\"spinner_auto\">\r\n                        </mat-spinner>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- No data Available in this Quiz -->\r\n<div class=\"col-md-12\" *ngIf=\"questions.length==0; else elseStatement\">\r\n    <mat-card class=\"ml20 text-center\">\r\n        <mat-card-content>\r\n            <h1>No data Available in this Quiz</h1>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"primary\" [routerLink]=\"'/user-dashboard/0'\"> Home</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>\r\n\r\n<!-- else block when data is Available in inside any quiz then execute only that section -->\r\n<ng-template #elseStatement>\r\n    <!-- Show the result -->\r\n    <div class=\"bootstrap-wrapper\" *ngIf=isSubmit>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6 offset-md-3\">\r\n                <mat-card>\r\n                    <mat-card-header>\r\n                        <mat-card-title>\r\n                            Quiz Result\r\n                        </mat-card-title>\r\n                    </mat-card-header>\r\n                    <mat-card-content class=\"text-center\">\r\n                        <h1>Marks Obtained: {{marksGot}}</h1>\r\n                        <h1>Correct Answers : {{correctAnswers}}</h1>\r\n                        <h1>Question Attemped: {{attempted}}</h1>\r\n                    </mat-card-content>\r\n\r\n                    <!-- Buuton -->\r\n\r\n                    <mat-card-actions class=\"text-center\">\r\n                        <button mat-raised-button color=\"primary\" [routerLink]=\"'/user-dashboard/0'\"> Home</button>\r\n                        <button (click)=\"printPage()\" mat-raised-button color=\"accent\"> Print</button>\r\n                    </mat-card-actions>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-view-quizzes',\r\n  templateUrl: './view-quizzes.component.html',\r\n  styleUrls: ['./view-quizzes.component.css']\r\n})\r\nexport class ViewQuizzesComponent implements OnInit {\r\n\r\n  quizdata = [\r\n    //dummy data\r\n    // {\r\n    //   qid:27,\r\n    //   title:\"Java Basic\",\r\n    //   description:\"This is java basic content\",\r\n    //   maxMarks: \"200\",\r\n    //   numberOfQuestions:\"20\",\r\n    //   active:\"True\",\r\n    //   category:{\r\n    //     title:\"Programming\",\r\n    //   },\r\n    // },\r\n\r\n    // {\r\n    //   qid:27,\r\n    //   title:\"Java Basic\",\r\n    //   description:\"This is java basic content\",\r\n    //   maxMarks: \"200\",\r\n    //   numberOfQuestions:\"20\",\r\n    //   active:\"True\",\r\n    //   category:{\r\n    //     title:\"Programming\",\r\n    //   },\r\n    // },\r\n\r\n    // {\r\n    //   qid:27,\r\n    //   title:\"Java Basic\",\r\n    //   description:\"This is java basic content\",\r\n    //   maxMarks: \"200\",\r\n    //   numberOfQuestions:\"20\",\r\n    //   active:\"True\",\r\n    //   category:{\r\n    //     title:\"Programming\",\r\n    //   },\r\n    // },\r\n  ];\r\n\r\n  constructor(private _quizService: QuizService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._quizService.quizess().subscribe(\r\n      (data: any) => {\r\n        //success\r\n        this.quizdata = data;\r\n      },\r\n      (error) => {\r\n        //error\r\n        console.log(error);\r\n        Swal.fire('Error', 'Error in Lodaing data from the server', 'error');\r\n      });\r\n\r\n    // if (this.active == false){\r\n\r\n    // }\r\n\r\n  }\r\n\r\n  //delete Quiz\r\n  deleteQuiz(qid) {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Are you sure ?',\r\n      confirmButtonText: 'Delete',\r\n      showCancelButton: true,\r\n    }).then((result) => {\r\n\r\n      if (result.isConfirmed) {\r\n\r\n        //delete here\r\n\r\n        this._quizService.quizDelete(qid).subscribe(\r\n          (data) => {\r\n            //quiz filter after deleting\r\n            this.quizdata = this.quizdata = this.quizdata.filter((quiz) => quiz.qid != qid);\r\n            //success\r\n            Swal.fire('Success', 'Quiz deleted!!', 'success');\r\n          },\r\n          (error) => {\r\n            //error\r\n            Swal.fire('Error', 'Error in deleting quiz', 'error');\r\n          },\r\n        );\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<h1 class=\"mt20\">Available Quiz</h1>\r\n<mat-card class=\"mt10 mr20 ml20\" *ngFor=\"let q of quizdata\">\r\n    <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>\r\n            {{q.title}}\r\n        </mat-card-title>\r\n        <mat-card-subtitle>{{q.category.title}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n        <p class=\"truncate\">{{q.description}}</p>\r\n\r\n    </mat-card-content>\r\n\r\n    <mat-card-action>\r\n\r\n        <button mat-stroked-button color=\"accent\" class=\"ml20\">Max Marks: {{q.maxMarks}}</button>\r\n        <button mat-stroked-button color=\"accent\" class=\"ml20\">Questions: {{q.numberOfQuestions}}</button>\r\n        <button mat-stroked-button color=\"accent\" class=\"ml20\">Quiz Publish : {{q.active}}</button>\r\n        <button [routerLink]=\"'/admin/view-questions/'+q.qid+'/'+q.title\" mat-button color=\"primary\">Questions</button>\r\n        <button mat-button color=\"accent\" class=\"ml20\" color=\"primary\">Attempts</button>\r\n        <button [routerLink]=\"'/admin/quiz/' + q.qid\" mat-button color=\"primary\" class=\"ml20\">Update</button>\r\n        <button mat-button color=\"warn\" class=\"ml20\" (click)=\"deleteQuiz(q.qid)\">DELETE</button>\r\n\r\n    </mat-card-action>\r\n</mat-card>\r\n\r\n\r\n<div class=\"col-md-12\" *ngIf=\"quizdata.length==0\">\r\n    <mat-card class=\"mt20\">\r\n        <mat-card-content class=\"text-center\">\r\n            <h1>No Quiz Available</h1>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions class=\"text-center\">\r\n            <button routerLink='/admin/add-quiz' mat-raised-button color=\"accent\">Add New Quiz</button>\r\n        </mat-card-actions>\r\n\r\n    </mat-card>\r\n</div>\r\n\r\n\r\n<!-- <div class=\"container text-center mt20\">\r\n    <button routerLink='/admin/add-quiz' mat-raised-button color=\"accent\">Add New Quiz</button>\r\n</div> -->","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddCategoryComponent } from './pages/admin/add-category/add-category.component';\r\nimport { AddQuestionsComponent } from './pages/admin/add-questions/add-questions.component';\r\nimport { AddQuizComponent } from './pages/admin/add-quiz/add-quiz.component';\r\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\r\nimport { UpdateCategoryComponent } from './pages/admin/update-category/update-category.component';\r\nimport { UpdateQuestionComponent } from './pages/admin/update-question/update-question.component';\r\nimport { UpdateQuizComponent } from './pages/admin/update-quiz/update-quiz.component';\r\nimport { ViewCategoriesComponent } from './pages/admin/view-categories/view-categories.component';\r\nimport { ViewQuizQuestionsComponent } from './pages/admin/view-quiz-questions/view-quiz-questions.component';\r\nimport { ViewQuizzesComponent } from './pages/admin/view-quizzes/view-quizzes.component';\r\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\r\nimport { Error404Component } from './pages/errorpage/error404/error404.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { AboutQuizComponent } from './pages/user/about-quiz/about-quiz.component';\r\nimport { InstructionsComponent } from './pages/user/instructions/instructions.component';\r\nimport { LoadQuizComponent } from './pages/user/load-quiz/load-quiz.component';\r\nimport { StartComponent } from './pages/user/start/start.component';\r\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\r\nimport { AdminGuard } from './services/admin.guard';\r\nimport { UserGuard } from './services/user.guard';\r\n\r\nconst routes: Routes = [\r\n\r\n  // For Home Page\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    pathMatch: 'full'\r\n  },\r\n\r\n  // For Signup Page\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent,\r\n    pathMatch: 'full',\r\n  },\r\n\r\n  // For Login Page\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    pathMatch: 'full',\r\n  },\r\n\r\n  // For Admin Dashboard\r\n  {\r\n    path: 'admin',\r\n    component: DashboardComponent,\r\n    // pathMatch: 'full',\r\n    // Admin Gaurd\r\n    canActivate: [AdminGuard],\r\n\r\n    // for profile content dashboard content\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: WelcomeComponent,\r\n      },\r\n\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent,\r\n      },\r\n\r\n      {\r\n        path: 'error404',\r\n        component: Error404Component,\r\n      },\r\n\r\n      {\r\n        path: 'categories',\r\n        component: ViewCategoriesComponent,\r\n      },\r\n\r\n      {\r\n        path: 'add-category',\r\n        component: AddCategoryComponent,\r\n      },\r\n\r\n      {\r\n        path: 'quizzes',\r\n        component: ViewQuizzesComponent,\r\n      },\r\n\r\n      {\r\n        path: 'add-quiz',\r\n        component: AddQuizComponent,\r\n      },\r\n\r\n      {\r\n        path: 'quiz/:qid',\r\n        component: UpdateQuizComponent,\r\n      },\r\n\r\n      {\r\n        path: 'view-questions/:qid/:title',\r\n        component: ViewQuizQuestionsComponent,\r\n      },\r\n\r\n      {\r\n        path: 'add-questions/:qid/:title',\r\n        component: AddQuestionsComponent,\r\n      },\r\n\r\n      {\r\n        path: 'question/:quesId',\r\n        component: UpdateQuestionComponent,\r\n      },\r\n\r\n      {\r\n        path: 'category/:cid',\r\n        component: UpdateCategoryComponent,\r\n      },\r\n\r\n    ],\r\n  },\r\n\r\n  // For Normal User Dashboard\r\n  {\r\n    path: 'user-dashboard',\r\n    component: UserDashboardComponent,\r\n    // Normal User Gaurd\r\n    canActivate: [UserGuard],\r\n    children:[\r\n      {\r\n        path: ':catId',\r\n        component:LoadQuizComponent,\r\n      },\r\n\r\n      {\r\n        path: 'instructions/:qid',\r\n        component: InstructionsComponent,\r\n      },\r\n\r\n      // about quiz view page\r\n      {\r\n        path: 'about-quiz/:qid',\r\n        component: AboutQuizComponent,\r\n      },\r\n\r\n    ],\r\n  },\r\n  {\r\n    path: 'start/:qid',\r\n    component: StartComponent,\r\n    canActivate: [UserGuard],\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuestionService } from 'src/app/services/question.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-view-quiz-questions',\r\n  templateUrl: './view-quiz-questions.component.html',\r\n  styleUrls: ['./view-quiz-questions.component.css']\r\n})\r\nexport class ViewQuizQuestionsComponent implements OnInit {\r\n\r\n  qId;\r\n  qTitle;\r\n  questions=[];\r\n  constructor(\r\n    private _route : ActivatedRoute,\r\n    private _questionService: QuestionService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.qId = this._route.snapshot.params.qid;\r\n    this.qTitle = this._route.snapshot.params.title;\r\n    console.log(this.qId);\r\n    console.log(this.qTitle);\r\n\r\n    this._questionService.getQuestionsOfQuiz(this.qId).subscribe(\r\n      (data: any)=>{\r\n        //Success\r\n        this.questions = data;\r\n        // console.log(this.questions);\r\n        \r\n\r\n      },\r\n      (error)=>{\r\n        //error\r\n        Swal.fire('Error',\"Server error while loading data\",'error');\r\n      },\r\n    );\r\n  }\r\n\r\n  //delete questions\r\n  deleteQuestionById(qid){\r\n   Swal.fire({\r\n     icon: 'info',\r\n     showCancelButton: true,\r\n     confirmButtonText:'Delete',\r\n     title:'Are you sure, want to delete this question?',\r\n   }).then((result)=>{\r\n      if (result.isConfirmed){\r\n        //click on delete\r\n        this._questionService.deletingParticularQuestion(qid).subscribe(\r\n          (data)=>{\r\n            //Success\r\n            Swal.fire('Success' ,'Question deleted!!!' ,'success');\r\n            //Now filter data (Questions)\r\n            this.questions = this.questions.filter((q)=> q.quesId != qid);\r\n          },\r\n          (error)=>{\r\n            //error\r\n            Swal.fire('Error' ,'Server error while deleting question' ,'error');\r\n          },\r\n        );\r\n      }\r\n   });\r\n  }\r\n\r\n}\r\n","<h1 class=\"mt20\">Questions of {{qTitle}}</h1>\r\n\r\n<div class=\"bootstrap-wrapper\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"container text-center\">\r\n                <button [routerLink]=\"'/admin/add-questions/' +qId+'/'+qTitle\" mat-raised-button color=\"primary\">Add Questions</button>\r\n            </div>\r\n            <mat-card *ngFor=\"let q of questions ; let i = index\" class=\"mt20\">\r\n                <mat-card-content>\r\n                    <p>\r\n                        <b>Q {{i+1}} :</b>\r\n                        <span class=\"ml20\" [innerHTML]=\"q.content\"></span>\r\n                    </p>\r\n\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <p><b>(A) </b>{{q.option1}}</p>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-6\">\r\n                                <p><b>(B) </b>{{q.option2}}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <p><b>(C) </b>{{q.option3}}</p>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-6\">\r\n                                <p><b>(D) </b>{{q.option4}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <mat-divider></mat-divider>\r\n                        <p class=\"mt20\">\r\n                            <b>Correct Answer:</b> {{q.answer}}\r\n                        </p>\r\n                    </div>\r\n                </mat-card-content>\r\n\r\n                <mat-card-action>\r\n                    <button [routerLink]=\"'/admin/question/'+q.quesId\" mat-raised-button color=\"accent\" class=\"ml20\">Update</button>\r\n                    <button (click)=\"deleteQuestionById(q.quesId)\" mat-raised-button color=\"warn\" class=\"ml20\">Delete</button>\r\n                </mat-card-action>\r\n\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}