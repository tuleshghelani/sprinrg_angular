{"version":3,"sources":["webpack:///src/app/pages/admin/sidebar/sidebar.component.ts","webpack:///src/app/pages/admin/sidebar/sidebar.component.html","webpack:///src/app/pages/user/instructions/instructions.component.ts","webpack:///src/app/pages/user/instructions/instructions.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/user/load-quiz/load-quiz.component.ts","webpack:///src/app/pages/user/load-quiz/load-quiz.component.html","webpack:///src/app/pages/admin/add-quiz/add-quiz.component.ts","webpack:///src/app/pages/admin/add-quiz/add-quiz.component.html","webpack:///src/app/services/auth.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/app/componets/footer/footer.component.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/user.guard.ts","webpack:///src/app/pages/admin/update-question/update-question.component.ts","webpack:///src/app/pages/admin/update-question/update-question.component.html","webpack:///src/app/componets/navbar/navbar.component.html","webpack:///src/app/componets/navbar/navbar.component.ts","webpack:///src/app/pages/admin/add-questions/add-questions.component.ts","webpack:///src/app/pages/admin/add-questions/add-questions.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/pages/user/about-quiz/about-quiz.component.ts","webpack:///src/app/pages/user/about-quiz/about-quiz.component.html","webpack:///src/app/services/question.service.ts","webpack:///src/app/pages/admin/add-category/add-category.component.ts","webpack:///src/app/pages/admin/add-category/add-category.component.html","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/pages/user/user-dashboard/user-dashboard.component.ts","webpack:///src/app/pages/user/user-dashboard/user-dashboard.component.html","webpack:///src/app/pages/admin/welcome/welcome.component.ts","webpack:///src/app/pages/admin/welcome/welcome.component.html","webpack:///src/app/services/category.service.ts","webpack:///src/app/pages/admin/view-categories/view-categories.component.ts","webpack:///src/app/pages/admin/view-categories/view-categories.component.html","webpack:///src/app/services/admin.guard.ts","webpack:///src/app/pages/admin/update-category/update-category.component.ts","webpack:///src/app/pages/admin/update-category/update-category.component.html","webpack:///src/app/pages/user/sidebar/sidebar.component.ts","webpack:///src/app/pages/user/sidebar/sidebar.component.html","webpack:///src/app/pages/errorpage/error404/error404.component.ts","webpack:///src/app/pages/errorpage/error404/error404.component.html","webpack:///src/app/pages/admin/update-quiz/update-quiz.component.ts","webpack:///src/app/pages/admin/update-quiz/update-quiz.component.html","webpack:///src/app/services/helper.ts","webpack:///src/app/pages/signup/signup.component.ts","webpack:///src/app/pages/signup/signup.component.html","webpack:///src/app/services/quiz.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/pages/admin/dashboard/dashboard.component.ts","webpack:///src/app/pages/admin/dashboard/dashboard.component.html","webpack:///src/app/pages/user/start/start.component.ts","webpack:///src/app/pages/user/start/start.component.html","webpack:///src/app/pages/admin/view-quizzes/view-quizzes.component.ts","webpack:///src/app/pages/admin/view-quizzes/view-quizzes.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.ts","webpack:///src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SidebarComponent","InstructionsComponent","_route","_quizService","_router","qid","snapshot","params","console","log","getSingleQuiz","subscribe","data","quizessData","error","fire","title","showCancelButton","confirmButtonText","denyButtonText","icon","then","result","isConfirmed","navigate","isDenied","startQuiz","HomeComponent","LoadQuizComponent","catId","getActiveQuzzes","quizzList","getActiveQuzzesOfCategory","AddQuizComponent","_categoryService","_snackBar","quizData","description","maxMarks","numberOfQuestions","active","category","cid","categories","trim","open","duration","addingNewQuiz","addQuiz","AuthInterceptor","loginService","req","next","authReq","token","getToken","clone","setHeaders","Authorization","handle","AuthInterceptorProviders","provide","useClass","multi","environment","production","FooterComponent","LoginComponent","snackBar","router","loginData","username","password","generateToken","loginUser","getCurrentUser","user","setUser","getUserRole","loginStatusSubject","logOut","loginFormSubmit","LoginService","_http","post","localStorage","setItem","get","tokenStr","getItem","undefined","removeItem","JSON","stringify","userStr","parse","getUser","authorities","authority","UserGuard","route","state","isLoggedIn","UpdateQuestionComponent","_questionService","quesId","particularQuestionById","updateQuestion","content","option1","option2","answer","updateQuestionById","option3","option4","e","updatingWhileSubmitQuestion","NavbarComponent","isDarkTheme","asObservable","window","location","reload","toggleTheme","AddQuestionsComponent","Editor","questions","quiz","qId","qTitle","addQuestion","addQuestions","AppComponent","AboutQuizComponent","loadingQuizData","viewQuizData","QuestionService","AddCategoryComponent","_snackbar","addCategory","addCategoryFormSubmit","ProfileComponent","AppModule","forRoot","showForeground","UserDashboardComponent","WelcomeComponent","saleData","name","value","cardList","users","accuratecount","clientcount","customerfeedback","projectcountstop","setInterval","clearInterval","accuratecountstop","clientcountstop","customerfeedbackstop","getUserCount","CategoryService","put","ViewCategoriesComponent","_categories","deleteCategory","filter","AdminGuard","UpdateCategoryComponent","getCategoryById","catUpdateData","updatingCategory","updateCategoryONFormSubmit","Error404Component","UpdateQuizComponent","updatingQuizById","baseUrl","SignupComponent","userService","snack","firstName","lastName","email","phone","addUser","id","text","formSubmit","QuizService","quizUpdate","UserService","http","DashboardComponent","StartComponent","_locationSt","marksGot","correctAnswers","attempted","isSubmit","loadQuestions","preventBackButton","getQuestionsOfQuizByIdAndTest","isTimer","length","startTimmer","history","pushState","href","onPopState","evalQuiz","t","min","Math","floor","sec","validateQuestionsAndAnswer","parseFloat","Number","toFixed","print","ViewQuizzesComponent","quizdata","quizess","quizDelete","routes","path","component","pathMatch","canActivate","children","AppRoutingModule","ViewQuizQuestionsComponent","getQuestionsOfQuiz","deletingParticularQuestion","q","bootstrapModule","err","webpackEmptyAsyncContext","Promise","resolve","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n\n    <mat-action-list>\n\n        <div mat-subheader>Menu</div>\n        <button mat-list-item routerLink=\"/admin\"><mat-icon mat-list-icon>grid_view</mat-icon>DashBoard</button>\n\n        <button mat-list-item routerLink=\"/admin/profile\">\n            <mat-icon mat-list-icon>account_circle</mat-icon>\n            Profile\n        </button>\n        <button mat-list-item routerLink=\"/admin/categories\">\n            <mat-icon mat-list-icon>category</mat-icon>\n            Categories\n        </button>\n        <button mat-list-item routerLink=\"/admin/add-category\">\n            <mat-icon mat-list-icon>add_shopping_cart</mat-icon>\n            Add Categories\n        </button>\n        <button mat-list-item routerLink=\"/admin/quizzes\">\n            <mat-icon mat-list-icon>quiz</mat-icon>\n            Quizzes\n        </button>\n        <button mat-list-item routerLink=\"/admin/add-quiz\">\n            <mat-icon mat-list-icon>add</mat-icon>\n            Add Quiz\n        </button>\n        <button mat-list-item routerLink=\"/admin/error404\">\n            <mat-icon mat-list-icon>logout</mat-icon>\n            Logout\n        </button>\n\n        <button mat-list-item routerLink=\"/admin/profile\">\n            <mat-icon mat-list-icon>logout</mat-icon>\n            Demo\n        </button>\n        <button mat-list-item routerLink=\"/admin/profile\">\n            <mat-icon mat-list-icon>logout</mat-icon>\n            Demo\n        </button>\n\n\n\n    </mat-action-list>\n\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\nimport { StartComponent } from '../start/start.component';\n\n@Component({\n  selector: 'app-instructions',\n  templateUrl: './instructions.component.html',\n  styleUrls: ['./instructions.component.css']\n})\nexport class InstructionsComponent implements OnInit {\n\n  // Local Variable\n  qid\n  quizessData\n  constructor(private _route: ActivatedRoute, private _quizService: QuizService, private _router: Router) { }\n\n  ngOnInit(): void {\n\n    this.qid = this._route.snapshot.params.qid;\n    console.log(this.qid);\n\n    this._quizService.getSingleQuiz(this.qid).subscribe(\n      (data:any)=>{\n        //Success\n        this.quizessData = data;\n        // console.log(this.quizessData);\n      },\n      (error)=>{\n        //error\n        Swal.fire(\"Error\" , \"Server Error while loading quiz...\");\n      }\n    );\n\n  }\n  startQuiz(){\n    // this._router.\n    // [routerLink]=\"'/start/'+qid\"\n    Swal.fire({\n      title:'Do You want to start the quiz',\n       showCancelButton:true,\n       confirmButtonText: 'Start',\n       denyButtonText: \"Don't Start\",\n       icon: 'info',\n    }).then((result)=>{\n      if (result.isConfirmed){\n        this._router.navigate(['/start/'+this.qid]);\n      }else if(result.isDenied){\n        Swal.fire(\"Changes are not saved\", '' , 'info');\n      }\n    });\n  }\n  \n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <mat-card class=\"mt20\">\n                    <mat-card-header>\n                        <!-- Heading -->\n                        <mat-card-title>\n                            <!-- Title -->\n                            Read the instructions of this page carefully!!!\n                        </mat-card-title>\n                        <mat-card-subtitle>\n                            <!-- Sub Title -->\n                            One Step more to go\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content class=\"ml20\">\n                        <!-- Content -->\n                        <h1> {{quizessData.title}}</h1>\n                        <p>{{quizessData.description}}</p>\n                        <mat-divider></mat-divider>\n\n                        <br>\n\n                        <h1>Important Instructions</h1>\n                        <ul>\n                            <!--Every questions have 2 min only -->\n                            <li>Total time to solve Time is : <b>{{quizessData.numberOfQuestions * 2}}</b></li>\n                            <li>No Of Questions : <b>{{quizessData.numberOfQuestions}}</b> </li>\n                            <li>Each question carries : <b>{{quizessData.maxMarks /quizessData.numberOfQuestions}}</b> </li>\n                            <li>This quiz is testing purpose</li>\n                            <li>This quiz is testing purpose</li>\n\n                        </ul>\n\n                        <mat-divider></mat-divider>\n                        <br/>\n                        <h1>Attempting Quiz</h1>\n                        <ul>\n                            <li>Click <b>Start Quiz</b> to start quiz</li>\n                            <li>The will start </li>\n                            <li>The will start </li>\n\n\n                        </ul>\n\n                    </mat-card-content>\n                    <mat-card-actions class=\"text-center\">\n                        <!-- Action -->\n                        <button (click)=\"startQuiz()\" mat-raised-button color=\"accent\">Start Quizz</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"container\">\n        <div class=\"row mt20\">\n            <div class=\"col-md-6 offset-md-3 text-center\">\n\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n                <h1>Welcome to Exam Portal</h1>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-load-quiz',\n  templateUrl: './load-quiz.component.html',\n  styleUrls: ['./load-quiz.component.css']\n})\nexport class LoadQuizComponent implements OnInit {\n\n  //Local veriable\n  catId\n  quizzList \n  constructor(private _route:ActivatedRoute, private _quizService: QuizService) { }\n\n  ngOnInit(): void {\n    this._route.params.subscribe((params)=>{\n      this.catId =  params.catId;\n\n      if (this.catId == 0){\n        console.log(\"All Quizees loaded\");\n        this._quizService.getActiveQuzzes().subscribe(\n          (data:any)=>{\n           //Success\n           this.quizzList = data;\n           console.log(this.quizzList);\n   \n        },\n        (error)=>{\n         //Error\n         Swal.fire(\"Error\" , \"Server Error while loading all quizes!!!!\");\n        }\n        );\n      }else{\n        console.log(\"Specfic category laoded\");\n        this._quizService.getActiveQuzzesOfCategory(this.catId).subscribe(\n          (data:any)=>{\n            //success\n            this.quizzList = data;\n            console.log(this.quizzList);\n          },\n          (error)=>{\n            //error\n            Swal.fire(\"Error\" ,\"Server error while loading quizzes by category\");\n          },\n        );\n      }\n\n    });\n   \n   \n  }\n\n}\n","<div class=\"bootstarp-wrapper\">\n    <div class=\"container-fluid\">\n        <h1 class=\"mt20\">Available Quizzes</h1>\n        <div class=\"row\" mt20 *ngIf=\"quizzList\">\n            <div class=\"col-md-4\" *ngFor=\"let q of quizzList\">\n                <mat-card class=\"mb20\">\n                    <mat-card-header>\n                        <div mat-card-avatar class=\"example-header-image\"> </div>\n                        <mat-card-title>\n                            {{q.title}}\n                        </mat-card-title>\n                        <mat-card-subtitle>\n                            {{q.category.title}}\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <p class=\"truncate\">{{q.description}}</p>\n                    </mat-card-content>\n\n                    <mat-card-actions>\n                        <button mat-button color=\"primary\" [routerLink]=\"'/user-dashboard/about-quiz/'+q.qid\"> View</button>\n                        <button mat-button color=\"accent\" class=\"ml20\" [routerLink]=\"'/user-dashboard/instructions/'+q.qid\"> Start</button>\n                        <button mat-button color=\"primary\"> Q:{{q.numberOfQuestions}}</button>\n                        <button mat-button color=\"accent\"> M M:{{q.maxMarks}}</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n            <div class=\"col-md-12\" *ngIf=\"quizzList.length==0\">\n                <mat-card>\n                    <mat-card-content class=\"text-center\">\n                        <h1>No data Available in this Category</h1>\n                    </mat-card-content>\n\n                    <mat-card-actions class=\"text-center\">\n                        <button mat-raised-button color=\"primary\" [routerLink]=\"'/user-dashboard/0'\"> Home</button>\n                    </mat-card-actions>\n\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-add-quiz',\n  templateUrl: './add-quiz.component.html',\n  styleUrls: ['./add-quiz.component.css']\n})\nexport class AddQuizComponent implements OnInit {\n  // Form data binding\n  quizData = {\n    title: '',\n    description: '',\n    maxMarks: '',\n    numberOfQuestions: '',\n    active: true,\n    category:{\n      cid:'',\n    },\n  };\n\n  categories = [\n    //Dummy data\n    // {\n    //   cid:23,\n    //   title:\"programming\",\n    // },\n\n    // {\n    //   cid:23,\n    //   title:\"programming\",\n    // }\n  ];\n  constructor(private _categoryService: CategoryService, private _quizService :QuizService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    \n    this._categoryService.categories().subscribe(\n      (data: any)=>{\n        //success\n        this.categories = data;\n        console.log(this.categories);\n      },\n      (error)=>{\n        //error\n        console.log(error);\n        Swal.fire(\"Oop's\",'Server error while loading data!!!','error');\n      });\n  }\n\n  //add quiz\n  public addQuiz(){\n          if (this.quizData.title.trim() == '' || this.quizData.title == null){\n              this._snackBar.open('title is required!!','ok',{\n                duration:3000,\n              });\n              return;\n          }\n\n          if (this.quizData.description.trim() == '' || this.quizData.description == null){\n            this._snackBar.open('description is required!!','ok',{\n              duration:3000,\n            });\n            return;\n        }\n\n        if (this.quizData.maxMarks.trim() == '' || this.quizData.maxMarks == null){\n          this._snackBar.open('Max Marks is required!!','ok',{\n            duration:3000,\n          });\n          return;\n      }\n        if (this.quizData.numberOfQuestions.trim() == '' || this.quizData.numberOfQuestions == null){\n          this._snackBar.open('Number of questions is required!!','ok',{\n            duration:3000,\n          });\n          return;\n      }\n\n      if (this.quizData.category.cid == '' || this.quizData.category.cid == null){\n        this._snackBar.open('category is required!!','ok',{\n          duration:3000,\n        });\n        return;\n      }\n\n      //Now call server\n      this._quizService.addingNewQuiz(this.quizData).subscribe(\n        (data)=>{\n          //success\n          this.quizData.title = '',\n          this.quizData.description = '',\n          this.quizData.maxMarks = '',\n          this.quizData.numberOfQuestions = '',\n          this.quizData.category.cid = '',\n          Swal.fire('Success', 'Quiz added!!', 'success');\n        },\n        (error)=>{\n          //error\n          Swal.fire('Error', 'Server Error While adding Quiz Try Again!!', 'error');\n        }\n      )\n  }\n\n}\n","<mat-card>\n    <h1>Add New Quiz</h1>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col md 8 offset-md-2\">\n                <form (ngSubmit)=\"addQuiz()\">\n\n                    <!-- title field -->\n                    <mat-form-field appearance=\"outline\" class=\"w100\">\n                        <mat-label>Enter Title</mat-label>\n                        <input required [(ngModel)]=\"quizData.title\" type=\"text\" name=\"title\" placeholder=\"Enter Here.....\" matInput>\n                    </mat-form-field>\n\n                    <!-- description field -->\n                    <mat-form-field appearance=\"outline\" class=\"w100\">\n                        <mat-label>Enter Description</mat-label>\n                        <textarea required [(ngModel)]=\"quizData.description\" type=\"text\" rows=\"10\" name=\"description placeholder=\" matInput Enter description Here.....></textarea>\n                    </mat-form-field>\n\n                    <div class=\"row\">\n                        <!-- maxmium Marks  -->\n                        <div class=\"col-md-6\">\n                            <mat-form-field appearance=\"outline\" class=\"w100\">\n                                <mat-label>Maximum Marks</mat-label>\n                                <input required [(ngModel)]=quizData.maxMarks type=\"text\" name=\"maxMarks\" placeholder=\"Enter Here.....\" matInput>\n                            </mat-form-field>\n                        </div>\n                        <!-- number of questions to be displayed -->\n                        <div class=\"col-md-6\">\n                            <mat-form-field appearance=\"outline\" class=\"w100\">\n                                <mat-label>Number of Questions</mat-label>\n                                <input required [(ngModel)]=quizData.numberOfQuestions type=\"text\" name=\"numberOfQuestions\" placeholder=\"Enter Here.....\" matInput>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <!-- Select Category  -->\n                        <div class=\"col-md-6\">\n                            <mat-form-field appearance=\"fill\" class=\"w50\">\n                                <mat-label>Categories</mat-label>\n                                <mat-select required name=\"category\" [(ngModel)]=\"quizData.category.cid\">\n                                    <mat-option *ngFor=\"let c of categories\" [value]=\"c.cid\">\n                                        {{c.title}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n\n                        <!-- Quiz Status Enable or disable -->\n                        <div class=\"col-md-6\">\n                            <mat-slide-toggle required name=\"active\" class=\"mt20\" [(ngModel)]=\"quizData.active\">\n                                Publish Status\n                            </mat-slide-toggle>\n                        </div>\n                    </div>\n\n                    <div class=\"container text-center\">\n                        <button type=\"submit\" mat-raised-button color=\"primary\">Add</button>\n                        <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</mat-card>\n\n<!-- {{quizData | json}} -->","import { HttpEvent,\n        HttpHandler,\n        HttpInterceptor,\n        HttpRequest,\n        HTTP_INTERCEPTORS\n     } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { LoginService } from \"./login.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor{\n\n\n    constructor(private loginService: LoginService){\n\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        \n\n        //add the  JWT token from LocalStorage to pass request\n        // \n        let authReq = req;\n        const token = this.loginService.getToken();\n        if (token != null){\n            authReq = authReq.clone({setHeaders:{Authorization: `Bearer ${token}` },\n            \n            });\n        }\n        return next.handle(authReq);\n    }\n\n}\n\nexport const AuthInterceptorProviders=[{\n    provide:HTTP_INTERCEPTORS,\n    useClass:AuthInterceptor,\n    multi:true,\n}\n]","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  \n    \n  \n  \n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    constructor(private snackBar: MatSnackBar , private loginService: LoginService, private router: Router) { }\n\n    // Login Object\n  loginData = {\n    username: '',\n    password: '',\n  };\n\n  ngOnInit(): void {\n  }\n\n  // Login form Submit method\n  loginFormSubmit(){\n    console.log('Login Button Clicked');\n    console.log(this.loginData);\n\n    // Validations of login form\n    // For Username\n    // tslint:disable-next-line:triple-equals\n    if (this.loginData.username.trim() == '' || this.loginData.username == null){\n      // alert(\"Username required\");\n      // MatSnackBar\n      this.snackBar.open('Username is required!!!', 'OK', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    // For Password\n    // tslint:disable-next-line:triple-equals\n    if (this.loginData.password.trim() == '' || this.loginData.password == null){\n      // alert(\"Password required\");\n      this.snackBar.open('Password is required!!!', 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    // Request to server to generate JWT Token\n    this.loginService.generateToken(this.loginData).subscribe(\n        (data: any) => {\n          // Success\n          console.log(data);\n          // alert(\"Succeessfully Token genrated!!!\");\n\n          // After Successfully generated token then login from here!!!\n          this.loginService.loginUser(data.token);\n\n          // getting current user\n          this.loginService.getCurrentUser().subscribe(\n            (user: any) => {\n\n              // save user data into localStorage\n              this.loginService.setUser(user);\n              console.log(user);\n\n              // redirect: ...ADMIN: Admin-Dashboard\n              if (this.loginService.getUserRole() == 'ADMIN'){\n                // reDirect Admin DashBoard\n                // window.location.href=\"/admin\";\n                this.router.navigate(['admin']);\n                this.loginService.loginStatusSubject.next(true);\n\n\n                // redirect: ...NORMAL: Normal-Dashboard\n                // tslint:disable-next-line:triple-equals\n              }else if (this.loginService.getUserRole() == 'NORMAL'){\n                  // reDirect User DashBoard\n                  // window.location.href=\"/user-dashboard\";\n                  this.router.navigate(['user-dashboard/0']);\n                  this.loginService.loginStatusSubject.next(true);\n\n              }\n              else{\n                this.loginService.logOut();\n              }\n\n\n\n            },\n          );\n\n        },\n        (error) => {\n          // Error Occured\n          console.log('Oops...', 'Seems like Something went wrong!!!', error);\n          this.snackBar.open('Invaild credentials!!! Try Agin', 'ok', {\n            duration: 3000,\n          });\n        }\n      );\n\n\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 offset-3\">\n                <mat-card>\n                    <div class=\"container text-center\">\n                        <img src=\"../../../assets/register1.png\" width=\"150px\" height=\"150px\" alt=\"\">\n                    </div>\n                    <h1 class=\"text-center\">Login Here!!</h1>\n\n                    <!-- For Print Data of  Json by using Pipe Filter -->\n                    <!-- {{loginData | json}} -->\n                    <form (ngSubmit)=\"loginFormSubmit()\">\n                        <!--Username field-->\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>User Name</mat-label>\n                            <input [(ngModel)]=\"loginData.username\" required name=\"username\" matInput placeholder=\"Enter Here!\">\n                            <mat-hint>Vaild Username!!</mat-hint>\n                        </mat-form-field>\n\n                        <!--Password field-->\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>Password</mat-label>\n                            <input [(ngModel)]=\"loginData.password\" required name=\"password\" type=\"password\" matInput placeholder=\"Enter Here!\">\n                        </mat-form-field>\n\n                        <div class=\"container text-center\">\n\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Reset</button>\n                        </div>\n                    </form>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport baseUrl from './helper';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  //event\n  public loginStatusSubject =  new Subject<boolean>();\n\n  constructor(private _http: HttpClient) { }\n\n  // Login Service\n\n  //Generate Token\n  public generateToken(loginData: any) {\n\n    return this._http.post(`${baseUrl}/generate-token`, loginData);\n  }\n\n  //Login User : Set token in LocalStorage\n  public loginUser(token) {\n    localStorage.setItem(\"token\", token);\n    return true;\n  }\n\n  //Current User :  get current loggedin user\n  public getCurrentUser(){\n    return this._http.get(`${baseUrl}/current-user`);\n  }\n\n  //User is Logged in or not\n  public isLoggedIn() {\n    let tokenStr = localStorage.getItem(\"token\");\n    if (tokenStr == undefined || tokenStr == '' || tokenStr == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  //logOut : remove token from localStorage to logOut the user\n  public logOut(){\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    return true;\n  }\n\n  //get token\n  public getToken(){\n    return localStorage.getItem(\"token\");\n  }\n\n  //set userDetails\n  public setUser(user){\n    localStorage.setItem(\"user\",JSON.stringify(user));\n  }\n\n  //get UserDetails\n  public getUser(){\n    let userStr = localStorage.getItem(\"user\");\n    if (userStr != null){\n      return JSON.parse(userStr);\n    }else{\n      this.logOut();\n      return null;\n    }\n  }\n\n  //get user role\n  public getUserRole(){\n    let user = this.getUser();\n    return user.authorities[0].authority\n  }\n\n  // get all users count for admin \n  public getUserCount(){\n    return this._http.get(`${baseUrl}/user/usercount/`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n\n\n  //constructor\n  constructor(private loginService: LoginService, private router: Router){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      \n      if (this.loginService.isLoggedIn() && this.loginService.getUserRole() == \"NORMAL\"){\n        ////redirect Normal User page\n        return true;\n      }//Otherwise again  navigate to login page\n        this.router.navigate(['login']);\n        \n      return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-question',\n  templateUrl: './update-question.component.html',\n  styleUrls: ['./update-question.component.css']\n})\nexport class UpdateQuestionComponent implements OnInit {\nquesId;\nupdateQuestion;\n  constructor(private _route: ActivatedRoute,\n     private _questionService: QuestionService, private _snackBar: MatSnackBar,   private _router : Router) { }\n\n  ngOnInit(): void {\n    this.quesId = this._route.snapshot.params.quesId;\n    this._questionService.particularQuestionById(this.quesId).subscribe(\n      (data:any)=>{\n        //success\n        console.log(data);\n        this.updateQuestion = data;\n\n      },\n      (error)=>{\n        //error\n        // console.log(error);\n        Swal.fire('Error' , 'Server error while loading data' , 'error'); \n      },\n    );\n  }\n\n  //Updating question while submit form\n  public updatingWhileSubmitQuestion(){\n\n    //validation\n    if (this.updateQuestion.content.trim() == '' || this.updateQuestion.content == null) {\n      this._snackBar.open('Question is required!!', 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (this.updateQuestion.option1.trim() == '' || this.updateQuestion.option1 == null) {\n      this._snackBar.open('Option 1 is required!!', 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (this.updateQuestion.option2.trim() == '' || this.updateQuestion.option2 == null) {\n      this._snackBar.open('Option 2 is required!!', 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    // if (this.updateQuestion.option3.trim() == '' || this.updateQuestion.option3 == null){\n    //   this._snackBar.open('Option 3 is required!!','ok',{\n    //     duration: 3000,\n    //   });\n    //   return;\n    // }\n\n    // if (this.updateQuestion.option4.trim() == '' || this.updateQuestion.option4 == null){\n    //   this._snackBar.open('Option 4 is required!!','ok',{\n    //     duration: 3000,\n    //   });\n    //   return;\n    // }\n\n    if (this.updateQuestion.answer.trim() == '' || this.updateQuestion.answer == null) {\n      this._snackBar.open('Answer is required!!', 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //Now calling the server to updating question\n\n    this._questionService.updateQuestionById(this.updateQuestion).subscribe(\n      (data)=>{\n        //success\n        // console.log(this.updateQuestion);'\n        this.updateQuestion.content = '',\n        this.updateQuestion.option1 = '',\n        this.updateQuestion.option2 = '',\n        this.updateQuestion.option3 = '',\n        this.updateQuestion.option4 = '',\n        this.updateQuestion.answer = '',\n        Swal.fire('Success' , 'Question Updated!!!' , 'success').then((e)=>{\n           //clicking ok then navigate to All questions\n           this._router.navigate(['/admin/view-questions/']);// some problem while routing i'll fix later\n        });\n      },\n      (error)=>{\n        //error\n        // console.log(error);\n        Swal.fire('error' , 'Server error while updating question', 'error');\n      },\n    );\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h1>Update Question of : {{updateQuestion.quiz.title}}</h1>\n\n            <mat-card>\n                <mat-card-header>\n                    <mat-card-subtitle>\n                        Enter the detail of the new question!!\n                    </mat-card-subtitle>\n                </mat-card-header>\n\n                <mat-card-content>\n                    <form (ngSubmit)=\"updatingWhileSubmitQuestion()\" class=\"mt20\">\n                        <!-- content field -->\n                        <mat-form-field appearance=\"fill\" class=\"w100\">\n                            <mat-label>Question Content</mat-label>\n                            <textarea required [(ngModel)]=\"updateQuestion.content\" name=\"content\" type=\"text\" rows=\"10\" matInput></textarea>\n                        </mat-form-field>\n\n                        <!-- Option 1  -->\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\n                                    <mat-label>Option 1</mat-label>\n                                    <input required [(ngModel)]=\"updateQuestion.option1\" type=\"text\" name=\"option1\" placeholder=\"Enter Here.....\" matInput>\n                                </mat-form-field>\n                            </div>\n\n                            <!-- Option 2  -->\n                            <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\n                                    <mat-label>Option 2</mat-label>\n                                    <input required [(ngModel)]=\"updateQuestion.option2\" type=\"text\" name=\"option2\" placeholder=\"Enter Here.....\" matInput>\n                                </mat-form-field>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <!-- Option 3  -->\n                            <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\n                                    <mat-label>Option 3</mat-label>\n                                    <input [(ngModel)]=\"updateQuestion.option3\" type=\"text\" name=\"option3\" placeholder=\"Enter Here.....\" matInput>\n                                </mat-form-field>\n                            </div>\n                            <!-- Option 4  -->\n                            <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\n                                    <mat-label>Option 4</mat-label>\n                                    <input [(ngModel)]=\"updateQuestion.option4\" type=\"text\" name=\"option4\" placeholder=\"Enter Here.....\" matInput>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <!-- answer -->\n                        <mat-form-field appearance=\"fill\" class=\"w100\">\n                            <mat-label>\n                                <---Select Answer--->\n                            </mat-label>\n                            <mat-select required [(ngModel)]=\"updateQuestion.answer\" name=\"answer\">\n                                <mat-option *ngIf=\"updateQuestion.option1\" [value]=\"updateQuestion.option1\">{{updateQuestion.option1}}</mat-option>\n                                <mat-option *ngIf=\" updateQuestion.option2\" [value]=\"updateQuestion.option2\">{{updateQuestion.option2}}</mat-option>\n                                <mat-option *ngIf=\"updateQuestion.option3\" [value]=\"updateQuestion.option3\">{{updateQuestion.option3}}</mat-option>\n                                <mat-option *ngIf=\" updateQuestion.option4\" [value]=\"updateQuestion.option4\">{{updateQuestion.option4}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                        <div class=\"container text-center\">\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Update</button>\n                        </div>\n                    </form>\n                </mat-card-content>\n\n            </mat-card>\n\n        </div>\n    </div>\n</div>\n<!-- {{updateQuestion | json}} -->","<!-- <h1>This is navbar</h1> -->\n<mat-sidenav-container mat-app-background [ngClass]=\"isDarkTheme? 'dark-theme' : 'light-theme' \">\n    <mat-toolbar color=\"primary\">\n        <a routerLink=\"/\" mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n            <mat-icon>widgets</mat-icon>\n        </a>\n        <span>Exam Portal</span>\n        <span class=\"example-spacer\"></span>\n\n        <mat-icon matTooltip=\"Switch Theme\">light_mode</mat-icon>\n        <mat-slide-toggle (click)=\"toggleTheme()\" ngx-tooltip></mat-slide-toggle>\n        <mat-icon>nights_stay</mat-icon>\n\n\n\n        <a *ngIf=\"!isLoggedIn\" [routerLink]=\"'/login'\" mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n              Login\n            </a>\n\n        <a *ngIf=\"!isLoggedIn\" [routerLink]=\"'/signup'\" mat-icon-button class=\"example-icon mr20 ml20\" aria-label=\"Example icon-button with share icon\">\n                Register\n            </a>\n\n        <a *ngIf=\" isLoggedIn && user\" routerLink=\"/admin/profile\" mat-button class=\"example-icon mr20 ml20 \" aria-label=\"Example icon-button with share icon \">\n                Welcome back :  {{user.username}}\n            </a>\n\n        <a (click)=\"logout()\" *ngIf=\" isLoggedIn \" mat-icon-button class=\"example-icon  ml20 \" aria-label=\"Example icon-button with share icon \">\n                Logout\n            </a>\n\n    </mat-toolbar>\n\n\n    <mat-card>\n        <!-- Dynamic Content -->\n        <router-outlet></router-outlet>\n        <!-- footer -->\n        <app-footer></app-footer>\n    </mat-card>\n\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  isLoggedIn = false;\n  user = null;\n  isDarkTheme = false;\n\n//  constructor\n  constructor(public loginService: LoginService){\n  }\n\n\n  ngOnInit(): void {\n    this.isLoggedIn = this.loginService.isLoggedIn();\n    this.user = this.loginService.getUser();\n    this.loginService.loginStatusSubject.asObservable().subscribe(data => {\n\n      this.isLoggedIn = this.loginService.isLoggedIn();\n      this.user = this.loginService.getUser();\n\n    });\n\n    // LocalStorge Dark theme when ng init() loading\n    this.isDarkTheme = localStorage.getItem('theme') === 'dark' ? true : false;\n\n}\n\n// Dark theme \n    toggleTheme(){\n      this.isDarkTheme = !this.isDarkTheme;\n      localStorage.setItem('theme', this.isDarkTheme ? 'dark' : 'light');\n    }\n\n//  Logout method\n  public logout(){\n    console.log('logout click');\n    this.loginService.logOut();\n    window.location.reload();\n    // this.loginService.loginStatusSubject.next(false);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport Swal from 'sweetalert2';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n@Component({\n  selector: 'app-add-questions',\n  templateUrl: './add-questions.component.html',\n  styleUrls: ['./add-questions.component.css']\n})\nexport class AddQuestionsComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n\n  qId;\n  qTitle;\n  questions = {\n    quiz: {},\n    content: '',\n    option1: '',\n    option2: '',\n    option3: '',\n    option4: '',\n    answer: '',\n  }\n\n\n  constructor(private _route: ActivatedRoute, private _questionService: QuestionService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.qId = this._route.snapshot.params.qid;\n    this.qTitle = this._route.snapshot.params.title;\n    this.questions.quiz['qid'] = this.qId;\n    this.questions.quiz['title'] = this.qTitle;\n    console.log(this.qId, this.qTitle);\n  }\n  //add questions\n  addQuestions() {\n    //validation\n    if (this.questions.content.trim() == '' || this.questions.content == null) {\n      this._snackBar.open('Question is required!!', 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (this.questions.option1.trim() == '' || this.questions.option1 == null) {\n      this._snackBar.open('Option 1 is required!!', 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (this.questions.option2.trim() == '' || this.questions.option2 == null) {\n      this._snackBar.open('Option 2 is required!!', 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    // if (this.questions.option3.trim() == '' || this.questions.option3 == null){\n    //   this._snackBar.open('Option 3 is required!!','ok',{\n    //     duration: 3000,\n    //   });\n    //   return;\n    // }\n\n    // if (this.questions.option4.trim() == '' || this.questions.option4 == null){\n    //   this._snackBar.open('Option 4 is required!!','ok',{\n    //     duration: 3000,\n    //   });\n    //   return;\n    // }\n\n    if (this.questions.answer.trim() == '' || this.questions.answer == null) {\n      this._snackBar.open('Answer is required!!', 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //Now calling the server to add question\n    this._questionService.addQuestion(this.questions).subscribe(\n      (data) => {\n        //success\n        Swal.fire('Success', 'Question Added!!!', 'success');\n        //after submit data form will be blank\n        this.questions.content = ''\n        this.questions.option1 = ''\n        this.questions.option2 = ''\n        this.questions.option3 = ''\n        this.questions.option4 = ''\n        this.questions.answer = ''\n      },\n      (error) => {\n        //error\n        Swal.fire('Error', 'Server error while adding Questions', 'error');\n      },\n    );\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h1>Add Question to : {{qTitle}} </h1>\n\n            <mat-card>\n                <mat-card-header>\n                    <mat-card-subtitle>\n                        Enter the detail of the new question!!\n                    </mat-card-subtitle>\n                </mat-card-header>\n\n                <mat-card-content>\n                    <form (ngSubmit)=\"addQuestions()\" class=\"mt20\">\n                        <!-- content field -->\n<!--                        <mat-form-field appearance=\"fill\" class=\"w100\">-->\n<!--                            <mat-label>Question Content</mat-label>-->\n<!--                            <textarea required [(ngModel)]=\"questions.content\" name=\"content\" type=\"text\" rows=\"10\" matInput></textarea>-->\n<!--                        </mat-form-field>-->\n\n                         <ckeditor [editor]=\"Editor\" name=\"content\" [(ngModel)]=\"questions.content\"></ckeditor>\n                        <!-- Option 1  -->\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\n                                    <mat-label>Option 1</mat-label>\n                                    <input required [(ngModel)]=\"questions.option1\" type=\"text\" name=\"option1\" placeholder=\"Enter Here.....\" matInput>\n                                </mat-form-field>\n                            </div>\n\n                            <!-- Option 2  -->\n                            <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\n                                    <mat-label>Option 2</mat-label>\n                                    <input required [(ngModel)]=\"questions.option2\" type=\"text\" name=\"option2\" placeholder=\"Enter Here.....\" matInput>\n                                </mat-form-field>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <!-- Option 3  -->\n                            <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"fill\" class=\"w100\">\n                                    <mat-label>Option 3</mat-label>\n                                    <input [(ngModel)]=\"questions.option3\" type=\"text\" name=\"option3\" placeholder=\"Enter Here.....\" matInput>\n                                </mat-form-field>\n                            </div>\n                            <!-- Option 4  -->\n                            <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"fill\" class=\"w100 \">\n                                    <mat-label>Option 4</mat-label>\n                                    <input [(ngModel)]=\"questions.option4\" type=\"text\" name=\"option4\" placeholder=\"Enter Here.....\" matInput>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <!-- answer -->\n                        <mat-form-field appearance=\"fill\" class=\"w100\">\n                            <mat-label>\n                                <---Select Answer--->\n                            </mat-label>\n                            <mat-select required [(ngModel)]=\"questions.answer\" name=\"answer\">\n                                <mat-option *ngIf=\"questions.option1\" [value]=\"questions.option1\">{{questions.option1}}</mat-option>\n                                <mat-option *ngIf=\" questions.option2\" [value]=\"questions.option2\">{{questions.option2}}</mat-option>\n                                <mat-option *ngIf=\"questions.option3\" [value]=\"questions.option3\">{{questions.option3}}</mat-option>\n                                <mat-option *ngIf=\" questions.option4\" [value]=\"questions.option4\">{{questions.option4}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                        <div class=\"container text-center\">\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Add</button>\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\n                        </div>\n                    </form>\n                </mat-card-content>\n\n            </mat-card>\n\n        </div>\n    </div>\n</div>\n{{questions | json}}\n","import { Component } from '@angular/core';\nimport {NavbarComponent} from './componets/navbar/navbar.component'\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n    title = 'ExamForOnline';\n\n    // user setting and API - which will fetch the saved\n    // user has saved Dark Theme is equal to true else it will be false\n    // isDarkTheme = false;\n  \n    // toggleTheme(){\n    //   this.isDarkTheme = !this.isDarkTheme;\n    // }\n\n}\n","<!-- Loader -->\n<ngx-ui-loader fgsColor=\"#ff4081\" pbColor=\"#ff4081\" fgsType=\"square-jelly-box\" text=\"Please Wait...\" textColor=\"#fff\"></ngx-ui-loader>\n\n\n<!-- Loader Blur -->\n<div ngxUiLoaderBlurred blur=\"10\">\n    <!-- This page content will be blurred/frosted when foreground loader is showed -->\n\n    <!-- Static Content -->\n    <app-navbar></app-navbar>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-about-quiz',\n  templateUrl: './about-quiz.component.html',\n  styleUrls: ['./about-quiz.component.css']\n})\nexport class AboutQuizComponent implements OnInit {\n\n  // Local Variable\n  qid;\n  viewQuizData;\n\n  constructor(\n    private _route:ActivatedRoute,\n    private _quizService:QuizService) { }\n\n  ngOnInit(): void {\n    this.qid = this._route.snapshot.params.qid;\n    console.log(this.qid);\n    \n    //method calling when ng init loading\n    this.loadingQuizData(this.qid);\n  }\n\n  loadingQuizData(qid){\n\n    this._quizService.getSingleQuiz(qid).subscribe(\n      (data:any)=>{\n        //success\n        this.viewQuizData = data;\n        console.log(this.viewQuizData);\n      },\n      (error)=>{\n        //error\n        Swal.fire('Error' , 'Server error while loading data', 'error');\n\n      },\n    )\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <mat-card class=\"mt20\">\n                    <mat-card-header>\n                        <!-- Heading -->\n                        <mat-card-title>\n                            <!-- Title -->\n                            Read Quiz Details!!!\n                        </mat-card-title>\n                        <mat-card-subtitle>\n                            <!-- Sub Title -->\n                            Every questions have 2 min only\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content class=\"ml20\">\n                        <!-- Content -->\n                        <h1> {{viewQuizData.title}}</h1>\n                        <p>{{viewQuizData.description}}</p>\n                        <mat-divider></mat-divider>\n\n                        <br/>\n\n                        <h1>Question Details</h1>\n                        <ul>\n                            <li>Total Questions: <b>{{viewQuizData.numberOfQuestions}}</b></li>\n                            <li>Total Marks: <b>{{viewQuizData.maxMarks}}</b> </li>\n\n                        </ul>\n\n                        <h1>Marks Details</h1>\n\n                        <ul>\n                            <!--Every questions have 2 min only -->\n                            <li>Total time to solve Time is : <b>{{viewQuizData.numberOfQuestions * 2}}</b></li>\n                            <li>No Of Questions : <b>{{viewQuizData.numberOfQuestions}}</b> </li>\n                            <li>Each question carries : <b>{{viewQuizData.maxMarks /viewQuizData.numberOfQuestions}}</b> </li>\n                        </ul>\n\n                        <mat-divider></mat-divider>\n                        <br/>\n\n                    </mat-card-content>\n                    <mat-card-actions class=\"text-center\">\n                        <!-- Action -->\n                        <button mat-raised-button color=\"accent\" [routerLink]=\"'/user-dashboard/instructions/'+viewQuizData.qid\">Go</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport baseUrl from './helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  constructor(private _http: HttpClient) { }\n\n  public getQuestionsOfQuiz(qid) {\n    return this._http.get(`${baseUrl}/question/quiz/all/${qid}`);\n  }\n\n  public getQuestionsOfQuizByIdAndTest(qid) {\n    return this._http.get(`${baseUrl}/question/quiz/${qid}`);\n  }\n\n\n  //add questions\n  public addQuestion(questions){\n    return this._http.post(`${baseUrl}/question/`,questions);\n  }\n\n  //getting particular question from the sever by using Id\n  public particularQuestionById(quesId){\n    return this._http.get(`${baseUrl}/question/${quesId}`);\n  }\n\n  //question update\n  public updateQuestionById(questions){\n    return this._http.post(`${baseUrl}/question/`,questions);\n  }\n\n  //delete particular question by Id\n  public deletingParticularQuestion(quesId){\n    return this._http.delete(`${baseUrl}/question/${quesId}`);\n  }\n\n  //to validate questions answers call to server and check questions answer on sever\n  public validateQuestionsAndAnswer(questions){\n    return this._http.post(`${baseUrl}/question/eval-quiz`,questions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.css']\n})\nexport class AddCategoryComponent implements OnInit {\n\n  constructor(private _categoryService : CategoryService ,private _snackbar :MatSnackBar) { }\n\n  category = {\n    title: '',\n    description:'',\n  };\n\n  ngOnInit(): void {\n  }\n\n  //add category form submit method\n\n  addCategoryFormSubmit(){\n\n    if(this.category.title == '' || this.category.description == null){\n      this._snackbar.open(\"category title required!!!!\",\"ok\",{\n        duration:3000,\n      });\n      return;\n    }\n\n    if(this.category.description =='' || this.category.description == null){\n      this._snackbar.open(\"category description required!!!\",\"ok\",{\n        duration:3000,\n      });\n      return;\n    }\n\n    this._categoryService.addCategory(this.category).subscribe(\n      //success\n      (data:any)=>{\n        this.category.title = '';\n        this.category.description = '';\n        Swal.fire(\"Success\" , \"Category added successfully!!!\" , \"success\");\n      },\n      (error)=>{\n        //Error\n        Swal.fire(\"Oop's\" ,\"Server Error Try Again!!!\" , \"error\");\n      });\n  }\n\n}\n","<mat-card>\n    <h1>Add New Category</h1>\n    <!-- {{category | json}} -->\n    <mat-card-content>\n        <div class=\"bootstrap-wrapper\">\n            <div class=\"row\">\n                <div class=\"col-md-8 offset-md-2\">\n                    <form (ngSubmit)=\"addCategoryFormSubmit()\">\n                        <mat-form-field class=\"w100\" appearance=\"outline\">\n                            <mat-label>Title</mat-label>\n\n                            <input required [(ngModel)]=\"category.title\" autofocus type=\"text\" name=\"title\" matInput placeholder=\"Enter here..........\" />\n                        </mat-form-field>\n\n                        <mat-form-field class=\"w100\" appearance=\"outline\">\n                            <mat-label>Description</mat-label>\n                            <textarea required [(ngModel)]=\"category.description\" type=\"text\" name=\"title\" rows=\"15\" matInput placeholder=\"Enter Category Description here.........\"></textarea>\n                        </mat-form-field>\n\n                        <div class=\"container text-center\">\n\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Add</button>\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </mat-card-content>\n</mat-card>","<mat-card *ngIf=\"user\">\n    <h2>Your Profile Details</h2>\n    <!-- {{user | json}} -->\n    <mat-card-content>\n\n        <div class=\"bootstarp-wrapper\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"card col-md-5\">\n                        <!-- <img src=\"../../../assets/default.png\" alt=\"\" style=\"width:100%\"> -->\n                        <div class=\"flip-box\">\n                            <div class=\"flip-box-inner\">\n                                <div class=\"flip-box-front text\">\n\n                                    <img src=\"../../../assets/default.png\" alt=\"\" style=\"width:100%\">\n                                </div>\n                                <div class=\"flip-box-back\">\n\n                                    <img src=\"../../../assets/user_profile.png\" alt=\"\" style=\"width:297\" height=\"297\">\n                                </div>\n                            </div>\n                        </div>\n                        <h1>{{user.firstName}} {{user.lastName}}</h1>\n                        <p class=\"title\">Software Engineer</p>\n                        <p>Harvard University</p>\n\n                        <p><button class=\"button1\">Contact</button></p>\n                    </div>\n\n                    <!-- User Detail -->\n                    <div class=\"col-md-5\">\n\n                        <mat-card>\n                            <mat-card-subtitle>User Name</mat-card-subtitle>\n                            <mat-card-content>\n                                <mat-card-title>\n                                    {{user.username}}\n                                </mat-card-title>\n                            </mat-card-content>\n\n                            <mat-divider></mat-divider>\n                            <mat-card-subtitle>User Id</mat-card-subtitle>\n                            <mat-card-content>\n                                <mat-card-title>\n                                    Exam{{user.id}}\n                                </mat-card-title>\n                            </mat-card-content>\n\n                            <mat-divider></mat-divider>\n                            <mat-card-subtitle>Phone Number</mat-card-subtitle>\n                            <mat-card-content>\n                                <mat-card-title>\n                                    {{user.phone}}\n                                </mat-card-title>\n                            </mat-card-content>\n\n                            <mat-divider></mat-divider>\n                            <mat-card-subtitle>Role</mat-card-subtitle>\n                            <mat-card-content>\n                                <mat-card-title>\n                                    {{user.authorities[0].authority}}\n                                </mat-card-title>\n                            </mat-card-content>\n\n                            <mat-divider></mat-divider>\n                            <mat-card-subtitle>Status</mat-card-subtitle>\n                            <mat-card-content>\n                                <mat-card-title>\n                                    {{user.enabled?\"Active\":\"Not Active\"}}\n                                </mat-card-title>\n                            </mat-card-content>\n\n                            <!-- Button -->\n                            <mat-card-actions class=\"text-center\">\n                                <button mat-raised-button color=\"primary\">Update</button>\n                                <button mat-raised-button color=\"accent\">Share</button>\n                            </mat-card-actions>\n                        </mat-card>\n                    </div>\n\n                    <div class=\"col-md-2\">\n                        <mat-card>\n                            <mat-card-subtitle>\n                                Social Media\n                            </mat-card-subtitle>\n                            <mat-card-content>\n                                <button class=\"button2 fb\">Facebook</button>\n                                <mat-divider></mat-divider>\n                                <button class=\"button2 whatsapp mt20\">Whatsapp</button>\n                                <mat-divider></mat-divider>\n                                <button class=\"button2 linkedin mt20\">Linkdlen</button>\n                                <mat-divider></mat-divider>\n                                <button class=\"button2 twitter mt20\">Tiwtter</button>\n                                <mat-divider></mat-divider>\n                                <button class=\"button2 google mt20\">Gmail</button>\n                                <mat-divider></mat-divider>\n                                <!-- <button class=\"button2  mt20\">Helo</button>\n                                <mat-divider></mat-divider>\n                                <button class=\"button2  mt20\">Helo</button> -->\n\n                            </mat-card-content>\n                        </mat-card>\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </mat-card-content>\n\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user = null;\n\n  constructor(private loginService:LoginService) { }\n\n  ngOnInit(): void {\n    //data fetch from local Storage\n    // this.user = this.loginService.getUser();\n\n    //data fetch from server\n    this.loginService.getCurrentUser().subscribe(\n      (user: any)=>{\n        this.user= user;\n      },\n      (error)=>{\n        console.log(error);\n      },\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NavbarComponent } from './componets/navbar/navbar.component';\nimport { FooterComponent } from './componets/footer/footer.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { HomeComponent } from './pages/home/home.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {  MatIconModule } from '@angular/material/icon';\nimport { AuthInterceptorProviders } from './services/auth.interceptor';\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { MatListModule } from '@angular/material/list';\nimport { SidebarComponent } from './pages/admin/sidebar/sidebar.component';\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\nimport { Error404Component } from './pages/errorpage/error404/error404.component';\nimport { ViewCategoriesComponent } from './pages/admin/view-categories/view-categories.component';\nimport { AddCategoryComponent } from './pages/admin/add-category/add-category.component';\nimport { ViewQuizzesComponent } from './pages/admin/view-quizzes/view-quizzes.component';\nimport { AddQuizComponent } from './pages/admin/add-quiz/add-quiz.component';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSelectModule} from '@angular/material/select';\nimport { UpdateQuizComponent } from './pages/admin/update-quiz/update-quiz.component';\nimport { ViewQuizQuestionsComponent } from './pages/admin/view-quiz-questions/view-quiz-questions.component';\nimport { AddQuestionsComponent } from './pages/admin/add-questions/add-questions.component';\nimport { UpdateQuestionComponent } from './pages/admin/update-question/update-question.component';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { SidebarComponent as UserSidebar } from './pages/user/sidebar/sidebar.component';\nimport { NgxChartsModule }from '@swimlane/ngx-charts';\nimport { LoadQuizComponent } from './pages/user/load-quiz/load-quiz.component';\nimport { InstructionsComponent } from './pages/user/instructions/instructions.component';\nimport { StartComponent } from './pages/user/start/start.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { NgxUiLoaderHttpModule, NgxUiLoaderModule } from \"ngx-ui-loader\";\nimport { UpdateCategoryComponent } from './pages/admin/update-category/update-category.component';\nimport { AboutQuizComponent } from './pages/user/about-quiz/about-quiz.component';\n\n// import { MatTableModule } from '@angular/material/table';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    SignupComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardComponent,\n    UserDashboardComponent,\n    ProfileComponent,\n    SidebarComponent,\n    WelcomeComponent,\n    Error404Component,\n    ViewCategoriesComponent,\n    AddCategoryComponent,\n    ViewQuizzesComponent,\n    AddQuizComponent,\n    UpdateQuizComponent,\n    ViewQuizQuestionsComponent,\n    AddQuestionsComponent,\n    UpdateQuestionComponent,\n    UserSidebar,\n    LoadQuizComponent,\n    InstructionsComponent,\n    StartComponent,\n    UpdateCategoryComponent,\n    AboutQuizComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    CKEditorModule,\n    NgxChartsModule,\n    MatProgressSpinnerModule,\n    NgxUiLoaderModule,\n    NgxUiLoaderHttpModule.forRoot({\n      showForeground:true,\n    }),\n    // MatTableModule,\n    \n  ],\n  providers: [AuthInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-2\">\n\n                <app-sidebar-user></app-sidebar-user>\n            </div>\n            <div class=\"col-md-10\">\n                <!-- Use for content view same page -->\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n   //Chart Data \n   saleData = [\n    { name: \"Mobiles\", value: 105000 },\n    { name: \"Laptop\", value: 55000 },\n    { name: \"AC\", value: 15000 },\n    { name: \"Headset\", value: 150000 },\n    { name: \"Fridge\", value: 20000 }\n  ];\n\n  cardList = [\n    {\n      cid:23,\n      title:\"programming\",\n    },\n\n    {\n      cid:23,\n      title:\"programming\",\n    },\n\n    {\n      cid:23,\n      title:\"programming\",\n    },\n\n    {\n      cid:23,\n      title:\"programming\",\n    },\n  ];\n    //this is a variable that hold number\n    users= 0;\n    //same process\n    accuratecount:number = 0;\n    clientcount:number = 0;\n    customerfeedback:number = 0;\n\n  constructor(private loginService:LoginService) { }\n\n  ngOnInit(): void {\n  \n    this.loginService.getUserCount().subscribe(\n      (data: any)=>{\n        // console.log(userList);\n        this.users=data;\n      },\n      (error) =>{\n        console.log(error);\n      },\n    );\n    \n  }\n  //we have created setinterval function with arrow function and\n  //and set them in a variable that is projectcountstop.\n  projectcountstop:any = setInterval(()=>{\n    this.users++;\n    //we need to stop this at  particular point; will use if condition\n    if(this.users == this.users)\n    {\n      //clearinterval will stop tha function\n      clearInterval(this.projectcountstop);\n    }\n\n  },10) //10 is milisecond you can control it\n\n\n  accuratecountstop:any = setInterval(()=>{\n    this.accuratecount++;\n    if(this.accuratecount == 97)\n    {\n      \n      clearInterval(this.accuratecountstop);\n    }\n  },10) \n\n\n  clientcountstop:any = setInterval(()=>{\n    this.clientcount++;\n    if(this.clientcount == 5000)\n    {\n      \n      clearInterval(this.clientcountstop);\n    }\n  },10)\n\n  customerfeedbackstop:any = setInterval(()=>{\n    this.customerfeedback++;\n    if(this.customerfeedback == 100)\n    {\n      \n      clearInterval(this.customerfeedbackstop);\n    }\n  },10)\n\n  //conclusion: we have use\n  //string interpolation\n  //setInterval function\n  //()=> arrow function\n  //clearInterval \n  //creating variable\n\n\n\n}\n","<div class=\"bootstrap-wrapper\">\n\n\n    <div class=\"container-fluid\">\n\n        <div class=\"row mt20\">\n\n            <div class=\"col-md-8\">\n                <mat-card>\n                    <mat-card-title>User Progress</mat-card-title>\n                    <p class=\"text-center\">HTML</p>\n                    <div class=\"container\">\n                        <div class=\"skills html\">90%</div>\n                    </div>\n\n                    <p class=\"text-center\">CSS</p>\n                    <div class=\"container\">\n                        <div class=\"skills css\">80%</div>\n                    </div>\n\n                    <p class=\"text-center\">JavaScript</p>\n                    <div class=\"container\">\n                        <div class=\"skills js\">65%</div>\n                    </div>\n\n                    <p class=\"text-center\">PHP</p>\n                    <div class=\"container\">\n                        <div class=\"skills php\">100%</div>\n                    </div>\n\n                </mat-card>\n            </div>\n\n\n\n            <div class=\"col-md-4\">\n                <mat-card>\n\n                </mat-card>\n            </div>\n\n        </div>\n        <!-- second row  -->\n\n        <div class=\"row mt20\">\n\n            <div class=\"col-md-12\">\n                <mat-card>\n                    <mat-card-title>New User</mat-card-title>\n                    <p class=\"text-center\">HTML</p>\n                    <div class=\"container\">\n                        <div class=\"skills html\">90%</div>\n                    </div>\n\n                    <p class=\"text-center\">CSS</p>\n                    <div class=\"container\">\n                        <div class=\"skills css\">80%</div>\n                    </div>\n\n                    <p class=\"text-center\">JavaScript</p>\n                    <div class=\"container\">\n                        <div class=\"skills js\">65%</div>\n                    </div>\n\n                    <p class=\"text-center\">PHP</p>\n                    <div class=\"container\">\n                        <div class=\"skills php\">100%</div>\n                    </div>\n\n                </mat-card>\n            </div>\n\n            <!-- second row  -->\n\n\n        </div>\n\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport baseUrl from './helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private _http:HttpClient) { }\n\n  // load all the categories\n  public categories(){\n    return this._http.get(`${baseUrl}/category/`);\n  }\n\n  // Add category\n  public addCategory(category){\n\n    return this._http.post(`${baseUrl}/category/`, category);\n  }\n\n  // delete category\n  public deleteCategory(cid){\n    return this._http.delete(`${baseUrl}/category/${cid}`);\n  }\n  // get category by id\n  public getCategoryById(cid){\n    return this._http.get(`${baseUrl}/category/${cid}`);\n  }\n\n  // updating category \n  public updatingCategory(category){\n    return this._http.put(`${baseUrl}/category/`,category);\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/services/category.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-view-categories',\n  templateUrl: './view-categories.component.html',\n  styleUrls: ['./view-categories.component.css']\n})\nexport class ViewCategoriesComponent implements OnInit {\n\n  constructor( private _categories:CategoryService) { }\n\n  // Category data in array format\n  categories = [\n    // Dummy Data\n    // {\n    //   id:23,\n    //   title:\"Programming\",\n    //   description:\"This is testing purpose\",\n    // },\n\n    // {\n    //   id:24,\n    //   title:\"Matmatices\",\n    //   description:\"This is testing purpose\",\n    // },\n\n    // {\n    //   id:25,\n    //   title:\"General Knowledge\",\n    //   description:\"This is testing purpose\",\n    // },\n  ];\n\n  ngOnInit(): void {\n    this._categories.categories().subscribe(\n      (data: any)=>{\n      //success\n      this.categories = data;\n      // console.log(this.categories);\n    },\n    (error)=>{\n      //error\n      console.log(error);\n      Swal.fire(\"Error\",\"Error in Lodaing data from the server\",'error');\n    });\n  }\n\n  // Delete Category\n  deleteCategory(cid){\n    \n    Swal.fire({\n      icon: 'warning',\n      title: 'Are you sure ?',\n      confirmButtonText: 'Delete',\n      showCancelButton: true,\n    }).then((result) => {\n\n      if (result.isConfirmed) {\n\n        //delete here\n        this._categories.deleteCategory(cid).subscribe(\n          (data) => {\n            //quiz filter after deleting\n            this.categories = this.categories = this.categories.filter((category) => category.cid != cid);\n            // console.log(cid);\n            // console.log(this.categories);\n            //success\n            Swal.fire('Success', 'Category deleted!!', 'success');\n          },\n          (error) => {\n            //error\n            Swal.fire('Error', 'Error in deleting Category', 'error');\n          },\n        );\n\n      }\n    });\n  }\n  \n\n}\n","<div class=\"bootstarp-wrapper\">\n    <div class=\"container-fluid\">\n        <h1 class=\"mt20\">Available Category</h1>\n        <div class=\"row\" mt20 *ngIf=\"categories\">\n            <div class=\"col-md-6\" *ngFor=\"let c of categories\">\n                <mat-card class=\"mb20\">\n                    <mat-card-header>\n                        <div mat-card-avatar class=\"example-header-image\"> </div>\n                        <mat-card-title>\n                            {{c.title}}\n                        </mat-card-title>\n                        <mat-card-subtitle>\n                            {{c.title}}\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <p class=\"truncate\">{{c.description}}</p>\n                    </mat-card-content>\n\n                    <mat-card-actions>\n                        <!-- <button mat-button color=\"primary\" [routerLink]=\"'/user-dashboard/about-quiz/'+q.qid\"> View</button> -->\n                        <button mat-raised-button color=\"primary\" class=\"ml20\" [routerLink]=\"'/admin/category/'+c.cid\">Update</button>\n                        <button mat-raised-button color=\"accent\" class=\"ml20\" (click)=\"deleteCategory(c.cid)\">Delete</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n            <div class=\"col-md-12\" *ngIf=\"categories.length==0\">\n                <mat-card>\n                    <mat-card-content class=\"text-center\">\n                        <h1>No Category Available</h1>\n                    </mat-card-content>\n\n                    <mat-card-actions class=\"text-center\">\n                        <button mat-raised-button color=\"primary\" [routerLink]=\"'/admin/add-category'\"> Add New Category</button>\n                    </mat-card-actions>\n\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  //constructor\n  constructor(private loginService: LoginService, private router: Router){\n    \n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n   \n      if (this.loginService.isLoggedIn() && this.loginService.getUserRole() == \"ADMIN\"){\n\n        //redirect Admin page\n        return true;\n      }// otherwise again redirect login page\n      this.router.navigate(['login']);\n   \n      return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoryService } from 'src/app/services/category.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-category',\n  templateUrl: './update-category.component.html',\n  styleUrls: ['./update-category.component.css']\n})\nexport class UpdateCategoryComponent implements OnInit {\n\n  // local variable\n  cid;\n  catUpdateData;\n\n  constructor(\n    private _route:ActivatedRoute,\n    private _categoryService: CategoryService,\n    private _snackbar:MatSnackBar,\n    private _router:Router,\n    ) { }\n\n  ngOnInit(): void {\n\n    //Now get id from url with help of _route\n    this.cid = this._route.snapshot.params.cid;\n    console.log(this.cid);\n    this._categoryService.getCategoryById(this.cid).subscribe(\n      (data)=>{\n        //success\n        this.catUpdateData = data;\n        // console.log(this.catUpdateData);\n      },\n      (error)=>{\n        //error\n        Swal.fire('Error' , 'Server error while loading data!!' , 'error');\n      }\n    );\n\n  }\n\n  updateCategoryONFormSubmit(){\n    \n    if(this.catUpdateData.title == '' || this.catUpdateData.description == null){\n      this._snackbar.open(\"category title required!!!!\",\"ok\",{\n        duration:3000,\n      });\n      return;\n    }\n\n    if(this.catUpdateData.description =='' || this.catUpdateData.description == null){\n      this._snackbar.open(\"category description required!!!\",\"ok\",{\n        duration:3000,\n      });\n      return;\n    }\n\n// calling server to updatiing category\n\n    this._categoryService.updatingCategory(this.catUpdateData).subscribe(\n      (data)=>{\n        //success\n       this.catUpdateData.title = '';\n       this.catUpdateData.description = '';\n\n        Swal.fire('Success' ,'category updated' ,'success').then((e)=>{\n              //clicking ok then navigate to view Category Page\n              this._router.navigate(['/admin/categories']);\n        });\n       \n      },\n      (error)=>{\n        //error\n        Swal.fire('Error' ,'Error while updating category' ,'error');\n      }\n    );\n  }\n\n}\n","<mat-card>\n    <h1>Update Category</h1>\n    <!-- {{catUpdateData | json}} -->\n    <mat-card-content>\n        <div class=\"bootstrap-wrapper\">\n            <div class=\"row\">\n                <div class=\"col-md-8 offset-md-2\">\n                    <form (ngSubmit)=\"updateCategoryONFormSubmit()\">\n                        <mat-form-field class=\"w100\" appearance=\"outline\">\n                            <mat-label>Title</mat-label>\n\n                            <input required [(ngModel)]=\"catUpdateData.title\" autofocus type=\"text\" name=\"title\" matInput placeholder=\"Enter here..........\" />\n                        </mat-form-field>\n\n                        <mat-form-field class=\"w100\" appearance=\"outline\">\n                            <mat-label>Description</mat-label>\n                            <textarea required [(ngModel)]=\"catUpdateData.description\" type=\"text\" name=\"description\" rows=\"15\" matInput placeholder=\"Enter Category Description here.........\"></textarea>\n                        </mat-form-field>\n\n                        <div class=\"container text-center\">\n\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Update</button>\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/services/category.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-sidebar-user',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  categories;\n  constructor(private _categoryService:CategoryService) { }\n\n  ngOnInit(): void {\n    // on Loading init method data loaded\n    this._categoryService.categories().subscribe(\n      (data:any)=>{\n        // Success \n        this.categories = data;\n        console.log(\" data is \" ,this.categories);\n\n      },\n      (error)=>{\n        // Error\n        Swal.fire(\"Error\",\"Server Error while loading Categories\",\"error\");\n      }\n    )\n  }\n\n}\n","<mat-card>\n\n    <mat-action-list>\n\n        <div mat-subheader>Available Categories</div>\n\n        <button mat-list-item routerLink=\"/user-dashboard/0\">\n            <mat-icon mat-list-icon>grid_view</mat-icon>\n            All Quizzes\n        </button>\n\n        <button [routerLink]=\"'/user-dashboard/'+c.cid\" mat-list-item *ngFor=\"let c of categories\">\n            <mat-icon mat-list-icon>quiz</mat-icon>\n            {{c.title}}\n        </button>\n    </mat-action-list>\n\n</mat-card>\n\n<!-- {{categories | json}} -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error404',\n  templateUrl: './error404.component.html',\n  styleUrls: ['./error404.component.css']\n})\nexport class Error404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n\n    <div class=\"bootstrap-wrapper\">\n\n        <div class=\"container\">\n\n            <div class=\"row\">\n\n                <div class=\"col md-10\">\n                    <div class=\"stage\">\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n                        <div class=\"layer\"></div>\n\n                    </div>\n\n\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-quiz',\n  templateUrl: './update-quiz.component.html',\n  styleUrls: ['./update-quiz.component.css']\n})\nexport class UpdateQuizComponent implements OnInit {\n\n  qId = 0;//undefined\n  quiz;\n  categories;\n\n\n  //ActivatedRoute predefined \n  constructor(\n    private _route : ActivatedRoute,\n    private _quizService :QuizService, \n    private _categoryService: CategoryService,\n    private _snackBar: MatSnackBar,\n    private router: Router,\n    ) { }\n\n  ngOnInit(): void {\n\n    this.qId = this._route.snapshot.params.qid;\n    // console.log(this.qId);\n    this._quizService.getSingleQuiz(this.qId).subscribe(\n      (data:any)=>{\n        //success\n        this.quiz = data;\n        console.log(this.quiz);\n    },\n    (error)=>{\n      //error\n      console.log(error);\n    });\n\n    this._categoryService.categories().subscribe(\n      (data:any)=>{\n        //loading categories from server\n        this.categories = data;\n        console.log(this.categories);\n      },\n      (error)=>{\n        //error\n        console.log(error);\n\n      }\n    );\n  }\n\n  //update quiz\n  public updateQuiz(){\n\n        if (this.quiz.title.trim() == '' || this.quiz.title == null){\n          this._snackBar.open('title is required!!','ok',{\n            duration:3000,\n          });\n          return;\n      }\n\n      if (this.quiz.description.trim() == '' || this.quiz.description == null){\n        this._snackBar.open('description is required!!','ok',{\n          duration:3000,\n        });\n        return;\n    }\n\n    if (this.quiz.maxMarks.trim() == '' || this.quiz.maxMarks == null){\n      this._snackBar.open('Max Marks is required!!','ok',{\n        duration:3000,\n      });\n      return;\n    }\n    if (this.quiz.numberOfQuestions.trim() == '' || this.quiz.numberOfQuestions == null){\n      this._snackBar.open('Number of questions is required!!','ok',{\n        duration:3000,\n      });\n      return;\n    }\n\n    if (this.quiz.category.cid == '' || this.quiz.category.cid == null){\n    this._snackBar.open('category is required!!','ok',{\n      duration:3000,\n    });\n    return;\n    }  \n\n    //Now calling server to update quiz\n    this._quizService.updatingQuizById(this.quiz).subscribe(\n      (data:any)=>{\n        //success\n          this.quiz.title = '',\n          this.quiz.description = '',\n          this.quiz.maxMarks = '',\n          this.quiz.numberOfQuestions = '',\n          this.quiz.category.cid = '',\n        Swal.fire('Success', 'Quiz updated..', 'success').then((e)=>{\n          //clicking ok then navigate to view quiz\n          this.router.navigate(['/admin/quizzes']);\n        });\n      },\n      (error)=>{\n        //error\n        Swal.fire('Error', 'Server error while updating quiz','error');\n      });\n}\n\n}\n","<mat-card>\n    <h1>Update Quiz</h1>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col md 8 offset-md-2\">\n                <form *ngIf=\"quiz\" (ngSubmit)=\"updateQuiz()\">\n\n                    <!-- title field -->\n                    <mat-form-field appearance=\"outline\" class=\"w100\">\n                        <mat-label>Enter Title</mat-label>\n                        <input [(ngModel)]=\"quiz.title\" type=\"text\" name=\"title\" placeholder=\"Enter Here.....\" matInput>\n                    </mat-form-field>\n\n                    <!-- description field -->\n                    <mat-form-field appearance=\"outline\" class=\"w100\">\n                        <mat-label>Enter Description</mat-label>\n                        <textarea [(ngModel)]=\"quiz.description\" type=\"text\" rows=\"10\" name=\"description placeholder=\" matInput Enter description Here.....></textarea>\n                    </mat-form-field>\n\n                    <div class=\"row\">\n                        <!-- maxmium Marks  -->\n                        <div class=\"col-md-6\">\n                            <mat-form-field appearance=\"outline\" class=\"w100\">\n                                <mat-label>Maximum Marks</mat-label>\n                                <input [(ngModel)]=quiz.maxMarks type=\"text\" name=\"maxMarks\" placeholder=\"Enter Here.....\" matInput>\n                            </mat-form-field>\n                        </div>\n                        <!-- number of questions to be displayed -->\n                        <div class=\"col-md-6\">\n                            <mat-form-field appearance=\"outline\" class=\"w100\">\n                                <mat-label>Number of Questions</mat-label>\n                                <input [(ngModel)]=quiz.numberOfQuestions type=\"text\" name=\"numberOfQuestions\" placeholder=\"Enter Here.....\" matInput>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <!-- Select Category  -->\n                        <div class=\"col-md-6\">\n                            <mat-form-field appearance=\"fill\" class=\"w50\">\n                                <mat-label>Categories</mat-label>\n                                <mat-select name=\"category\" [(ngModel)]=\"quiz.category.cid\">\n                                    <mat-option *ngFor=\"let c of categories\" [value]=\"c.cid\">\n                                        {{c.title}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n\n                        <!-- Quiz Status Enable or disable -->\n                        <div class=\"col-md-6\">\n                            <mat-slide-toggle name=\"active\" class=\"mt20\" [(ngModel)]=\"quiz.active\">\n                                Publish Status\n                            </mat-slide-toggle>\n                        </div>\n                    </div>\n\n                    <div class=\" container text-center \">\n                        <button mat-raised-button color=\"accent\">Update Quiz</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</mat-card>\n\n<!-- {{quiz | json}} -->","const baseUrl = 'https://spring-angular-project.herokuapp.com';\n// const baseUrl = 'http://localhost:8080';\nexport default baseUrl;\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service'\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private userService: UserService, private snack: MatSnackBar) { }\n\n  // User Binding Object\n  public user = {\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n\n  };\n\n  ngOnInit(): void {\n  }\n\n  // Form Submit\n  formSubmit() {\n    console.log(this.user)\n\n    // Validations\n\n    if (this.user.username == '' || this.user.username == null) {\n      // alert(\"Username Required!!\")\n      this.snack.open(\"Username is required!!\", 'ok', {\n        duration: 3000,\n        // verticalPosition:'top'\n      });\n      return;\n    }\n\n    if (this.user.password == '' || this.user.password == null) {\n      this.snack.open(\"password is required!!\", 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (this.user.firstName == '' || this.user.firstName == null) {\n      this.snack.open(\"firstName is required!!\", 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (this.user.lastName == '' || this.user.lastName == null) {\n      this.snack.open(\"lastName is required!!\", 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (this.user.email == '' || this.user.email == null) {\n      this.snack.open(\"email address is required!!\", 'ok', {\n        duration: 3000,\n      });\n      return;\n    }\n\n      if (this.user.phone == '' || this.user.phone == null) {\n        this.snack.open(\"phone number is required!!\", 'ok', {\n          duration: 3000,\n        });\n        return;\n      }\n\n      // AddUser Method Calling From UserServices\n      this.userService.addUser(this.user).subscribe(\n        (data:any) => {\n          //Success\n          console.log(data)\n          // alert(\"Success\")\n          Swal.fire(\"Succcessfully done!!\",\"User is succcessfully registered and id is  \" + data.id ,\"success\")\n        },\n        (error) => {\n          //Error\n          console.log(error)\n          // alert(\"Something went to wrong!!!\")\n          // this.snack.open(\"Something went wrong!!!\",'ok',{\n          //   duration: 3000,\n          // });\n         Swal.fire(\"Oops...\", error.error.text,\"error\")\n          // this.snack.open(error.error.text,\"ok\");\n        }\n      );\n\n    }\n\n  }\n","<div class=\"bootstrap-wrapper\">\n\n    <div class=\"container\">\n\n        <div class=\"row\">\n\n            <div class=\"col-md-6 offset-md-3\">\n\n                <mat-card>\n                    <div class=\"container text-center\">\n\n                        <img src=\"../../../assets/register1.png\" width=\"150px\" height=\"150px\" alt=\"\">\n\n                    </div>\n\n                    <h1 class=\"text-center\">Register Here!!</h1>\n\n                    <!-- Show data above the form -->\n                    <!-- {{user | json }} -->\n\n                    <form (ngSubmit)=\"formSubmit()\">\n                        <!--Username field-->\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>User Name</mat-label>\n                            <input required [(ngModel)]=\"user.username\" name=\"username\" matInput placeholder=\"Enter Here!\">\n                            <mat-hint>User Name must be unique !!</mat-hint>\n                        </mat-form-field>\n\n                        <!--Password field-->\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>Password</mat-label>\n                            <input required [(ngModel)]=\"user.password\" name=\"password\" type=\"password\" matInput placeholder=\"Enter Here!\">\n                        </mat-form-field>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <!--Firstname field-->\n                                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                                    <mat-label>First Name</mat-label>\n                                    <input required [(ngModel)]=\"user.firstName\" name=\"firstName\" matInput placeholder=\"Enter Here!\">\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <!--Lastname field-->\n                                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                                    <mat-label>Last Name</mat-label>\n                                    <input required [(ngModel)]=\"user.lastName\" name=\"lastName\" matInput placeholder=\"Enter Here!\">\n                                </mat-form-field>\n                            </div>\n                        </div>\n\n                        <!--Email field-->\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>Email Address</mat-label>\n                            <input required [(ngModel)]=\"user.email\" name=\"email\" type=\"email\" matInput placeholder=\"Enter Here!\">\n                        </mat-form-field>\n\n                        <!--Phone field-->\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>Phone Number</mat-label>\n                            <input required [(ngModel)]=\"user.phone\" name=\"phone\" type=\"number\" matInput placeholder=\"Enter Here!\">\n                        </mat-form-field>\n\n                        <div class=\"container text-center\">\n\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Register</button>\n                            <button type=\"reset\" class=\"ml20\" mat-raised-button color=\"accent\">Clear</button>\n                        </div>\n                    </form>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport baseUrl from './helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n\n  constructor(private _http :HttpClient) { }\n\n  //get all quizess from server(database)\n  public quizess(){\n    return this._http.get(`${baseUrl}/quiz/`);\n  }\n\n  //add quiz\n  public addingNewQuiz(quizData){\n    return this._http.post(`${baseUrl}/quiz/`,quizData);\n  }\n\n  //delete quiz\n  public quizDelete(qid){\n    return this._http.delete(`${baseUrl}/quiz/${qid}`);\n  }\n\n  //get the single quiz\n  public getSingleQuiz(qid){\n    return this._http.get(`${baseUrl}/quiz/${qid}`);\n  }\n\n  //update the quiz by Id\n  public updatingQuizById(quizUpdate){\n    return this._http.put(`${baseUrl}/quiz/`,quizUpdate);\n  }\n\n  // Get Specfic Quizzes by Category\n  public getQuizzesOfCategory(cid){\n    return this._http.get(`${baseUrl}/quiz/category/${cid}`);\n  }\n\n\n  // Get Active Quizzs\n  public getActiveQuzzes(){\n    return this._http.get(`${baseUrl}/quiz/active`);\n  }\n\n  public getActiveQuzzesOfCategory(cid){\n    return this._http.get(`${baseUrl}/quiz/active/category/${cid}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport baseUrl from './helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    // AutoWiring HttpClient\n    private http:HttpClient\n  ) { }\n\n  // Add User\n  public addUser(user:any){\n    return this.http.post(`${baseUrl}/user/`,user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n\n    <div class=\"container-fluid\">\n\n        <div class=\"row\">\n\n            <div class=\"col-md-2\">\n                <app-sidebar></app-sidebar>\n            </div>\n\n            <div class=\"col-md-10\">\n                <!-- Use for content view same page -->\n                <router-outlet></router-outlet>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>","import { LocationStrategy } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent implements OnInit {\n\n  //Local variable\n  qid;\n  questions;\n\n  // Calculating marks\n  marksGot = 0;\n  correctAnswers = 0;\n  attempted  = 0;\n  isSubmit = false;\n  isTimer: any;\n\n  constructor(private _locationSt : LocationStrategy, private _route : ActivatedRoute,private _questionService: QuestionService) { }\n\n  ngOnInit(): void {\n\n    this.qid = this._route.snapshot.params.qid;\n    this.loadQuestions();\n\n    this.preventBackButton();\n  }\n\n\n  loadQuestions() {\n    \n    this._questionService.getQuestionsOfQuizByIdAndTest(this.qid).subscribe(\n      (data:any)=>{\n        //success\n        this.questions = data;\n\n        // Timmer will start while questions is loading\n        this.isTimer = this.questions.length * 2 * 60;\n\n        // // add new key and value for user given answers\n        // this.questions.forEach((q)=>{\n        //   q['givenAnswer'] = '';\n        // });\n\n        console.log(this.questions);\n        //Start timer function here\n        this.startTimmer();\n      },\n      (error)=>{\n        //error\n        Swal.fire(\"Error\",\"Server error while loading questions\",\"error\");\n      },\n    );\n  }\n   //Prevent to back button\n   preventBackButton(){\n      \n    history.pushState(null,null,location.href);\n    this._locationSt.onPopState(()=>{\n      history.pushState(null,null,location.href);\n    });\n\n  }\n\n  // Submit Quiz and calculating\n  submitQuiz(){\n\n          Swal.fire({\n            title: 'Do you want submit quiz',\n            showCancelButton: true,\n            confirmButtonText:'Submit Quiz',\n            icon: 'warning',\n          }).then((e)=>{\n            if(e.isConfirmed){\n              // User manually submit quiz then ask confirmation before submited quiz\n              this.evalQuiz();\n            }\n          })\n  }\n\n  startTimmer(){\n    let t = window.setInterval(()=>{\n      //code\n      if(this.isTimer <=0){\n\n        // After Completing time quiz will submitedd automatically without confirmation\n        this.evalQuiz();\n        clearInterval(t);\n      }else{\n        this.isTimer--;\n      }\n    },1000);\n  }\n\n  //time formated\n  getFormatedTime(){\n    let min = Math.floor(this.isTimer / 60);\n    let sec = this.isTimer - min * 60;\n    return `${min} Min : ${sec} Sec`;\n    \n  }\n\n  evalQuiz() {\n               //calculations here\n              //  Call to server to check questions\n              this._questionService.validateQuestionsAndAnswer(this.questions).subscribe(\n                (data:any)=>{\n                  console.log(data);\n                  this.marksGot = parseFloat(Number(data.marksGot).toFixed(2));\n                  this.correctAnswers = data.correctAnswers;\n                  this.attempted = data.attempted;\n                  this.isSubmit = true;\n                  console.log(\"=====================> \" , this.correctAnswers);\n                },\n                (error)=>{\n                  //error\n                  console.log(error);\n                }\n              )\n\n        // this.isSubmit = true;\n    //             this.questions.forEach((q)=>{\n    //               if (q.givenAnswer == q.answer){\n    //                   this.correctAnswers++;\n    //                   let marksSingle = this.questions[0].quiz.maxMarks / this.questions.length;\n    //                   this.marksGot += marksSingle;\n    //               }\n    //               //Calculating attpemting questions\n    //               if(q.givenAnswer.trim() != ''){\n    //                  this.attempted++;\n    //               }\n    //             });\n                  // console.log(\"Correct Answers :\" + this.correctAnswers);\n                  // console.log('Marks got' + this.marksGot);\n                  // console.log('Question Attempted' + this.attempted++);\n                  // console.log(this.questions);\n  }\n\n\n  // Print Page\n  printPage(){\n    window.print();\n  } \n\n}\n\n\n","<div class=\"bootstrap-wrapper\" *ngIf=\"!isSubmit\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-2\">\n                <!-- Instrustions -->\n\n                <mat-card class=\"spinner_center\">\n                    <h3><b>Instrustions</b></h3>\n                    <mat-card-content>\n                        <ul>\n                            <li>Please Do not refresh page otherwise question will be lost and new questions will suffles</li>\n                            <li>Don't switch tab</li>\n                            <li>Don't minimize current window</li>\n                        </ul>\n                    </mat-card-content>\n                </mat-card>\n\n\n            </div>\n            <div class=\"col-md-8\">\n                <!-- Questions -->\n                <ng-container *ngIf=\"questions\">\n                    <h1 class=\"mt20\">\n                        On Going Quiz <b>{{questions[0].quiz.title}}</b>\n                    </h1>\n                </ng-container>\n                <mat-card *ngFor=\"let q of questions; let i=index\" class=\"mt20\">\n                    <mat-card-content>\n                        <p><b>Q: {{i+1}})</b> <span [innerHTML]=\"q.content\"></span>\n                        </p>\n\n                        <mat-divider></mat-divider>\n\n                        <div class=\"row mt20\">\n                            <div class=\"col-md-6\">\n                                <input type=\"radio\" [(ngModel)]=\"q.givenAnswer\" [value]=\"q.option1\" [name]=\"i\" />{{q.option1}}\n                            </div>\n                            <div class=\"col-md-6\">\n                                <input type=\"radio\" [(ngModel)]=\"q.givenAnswer\" [value]=\"q.option2\" [name]=\"i\" />{{q.option2}}\n                            </div>\n                        </div>\n\n                        <div class=\"row mt20\">\n                            <div class=\"col-md-6 \">\n                                <input type=\"radio\" [(ngModel)]=\"q.givenAnswer\" [value]=\"q.option3\" [name]=\"i\" />{{q.option3}}\n                            </div>\n                            <div class=\"col-md-6 \">\n                                <input type=\"radio\" [(ngModel)]=\"q.givenAnswer\" [value]=\"q.option4\" [name]=\"i\" />{{q.option4}}\n                            </div>\n                        </div>\n\n                    </mat-card-content>\n                </mat-card>\n\n                <div class=\"container text-center mt20\">\n                    <button (click)=\"submitQuiz()\" mat-raised-button color=\"primary\">Submit Quiz</button>\n                </div>\n\n            </div>\n            <div class=\"col-md-2 \">\n                <!-- Progress -->\n                <mat-card class=\"spinner_center\">\n                    <mat-card-header>\n                        <mat-card-title>\n                            Progress\n                            <mat-card-subtitle>\n                                Quiz will automatically submitted when timer reaches to\n                                <b>: 0.0</b>\n                            </mat-card-subtitle>\n                        </mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <h1 class=\"text-center\">{{ getFormatedTime() }} </h1>\n                        <mat-spinner color=\"accent\" mode=\"determinate\" [value]=\"(isTimer / (this.questions.length * 2 * 60)) * 100\" class=\"spinner_auto\">\n                        </mat-spinner>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<!-- No data Available in this Quiz -->\n<div class=\"col-md-12\" *ngIf=\"questions.length==0; else elseStatement\">\n    <mat-card class=\"ml20 text-center\">\n        <mat-card-content>\n            <h1>No data Available in this Quiz</h1>\n        </mat-card-content>\n\n        <mat-card-actions>\n            <button mat-raised-button color=\"primary\" [routerLink]=\"'/user-dashboard/0'\"> Home</button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n\n<!-- else block when data is Available in inside any quiz then execute only that section -->\n<ng-template #elseStatement>\n    <!-- Show the result -->\n    <div class=\"bootstrap-wrapper\" *ngIf=isSubmit>\n        <div class=\"row\">\n            <div class=\"col-md-6 offset-md-3\">\n                <mat-card>\n                    <mat-card-header>\n                        <mat-card-title>\n                            Quiz Result\n                        </mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content class=\"text-center\">\n                        <h1>Marks Obtained: {{marksGot}}</h1>\n                        <h1>Correct Answers : {{correctAnswers}}</h1>\n                        <h1>Question Attemped: {{attempted}}</h1>\n                    </mat-card-content>\n\n                    <!-- Buuton -->\n\n                    <mat-card-actions class=\"text-center\">\n                        <button mat-raised-button color=\"primary\" [routerLink]=\"'/user-dashboard/0'\"> Home</button>\n                        <button (click)=\"printPage()\" mat-raised-button color=\"accent\"> Print</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-view-quizzes',\n  templateUrl: './view-quizzes.component.html',\n  styleUrls: ['./view-quizzes.component.css']\n})\nexport class ViewQuizzesComponent implements OnInit {\n\n  quizdata = [\n    //dummy data\n    // {\n    //   qid:27,\n    //   title:\"Java Basic\",\n    //   description:\"This is java basic content\",\n    //   maxMarks: \"200\",\n    //   numberOfQuestions:\"20\",\n    //   active:\"True\",\n    //   category:{\n    //     title:\"Programming\",\n    //   },\n    // },\n\n    // {\n    //   qid:27,\n    //   title:\"Java Basic\",\n    //   description:\"This is java basic content\",\n    //   maxMarks: \"200\",\n    //   numberOfQuestions:\"20\",\n    //   active:\"True\",\n    //   category:{\n    //     title:\"Programming\",\n    //   },\n    // },\n\n    // {\n    //   qid:27,\n    //   title:\"Java Basic\",\n    //   description:\"This is java basic content\",\n    //   maxMarks: \"200\",\n    //   numberOfQuestions:\"20\",\n    //   active:\"True\",\n    //   category:{\n    //     title:\"Programming\",\n    //   },\n    // },\n  ];\n\n  constructor(private _quizService: QuizService) { }\n\n  ngOnInit(): void {\n    this._quizService.quizess().subscribe(\n      (data: any) => {\n        //success\n        this.quizdata = data;\n      },\n      (error) => {\n        //error\n        console.log(error);\n        Swal.fire('Error', 'Error in Lodaing data from the server', 'error');\n      });\n\n    // if (this.active == false){\n\n    // }\n\n  }\n\n  //delete Quiz\n  deleteQuiz(qid) {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Are you sure ?',\n      confirmButtonText: 'Delete',\n      showCancelButton: true,\n    }).then((result) => {\n\n      if (result.isConfirmed) {\n\n        //delete here\n\n        this._quizService.quizDelete(qid).subscribe(\n          (data) => {\n            //quiz filter after deleting\n            this.quizdata = this.quizdata = this.quizdata.filter((quiz) => quiz.qid != qid);\n            //success\n            Swal.fire('Success', 'Quiz deleted!!', 'success');\n          },\n          (error) => {\n            //error\n            Swal.fire('Error', 'Error in deleting quiz', 'error');\n          },\n        );\n\n      }\n    });\n  }\n\n}\n","<h1 class=\"mt20\">Available Quiz</h1>\n<mat-card class=\"mt10 mr20 ml20\" *ngFor=\"let q of quizdata\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-title>\n            {{q.title}}\n        </mat-card-title>\n        <mat-card-subtitle>{{q.category.title}}</mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n        <p class=\"truncate\">{{q.description}}</p>\n\n    </mat-card-content>\n\n    <mat-card-action>\n\n        <button mat-stroked-button color=\"accent\" class=\"ml20\">Max Marks: {{q.maxMarks}}</button>\n        <button mat-stroked-button color=\"accent\" class=\"ml20\">Questions: {{q.numberOfQuestions}}</button>\n        <button mat-stroked-button color=\"accent\" class=\"ml20\">Quiz Publish : {{q.active}}</button>\n        <button [routerLink]=\"'/admin/view-questions/'+q.qid+'/'+q.title\" mat-button color=\"primary\">Questions</button>\n        <button mat-button color=\"accent\" class=\"ml20\" color=\"primary\">Attempts</button>\n        <button [routerLink]=\"'/admin/quiz/' + q.qid\" mat-button color=\"primary\" class=\"ml20\">Update</button>\n        <button mat-button color=\"warn\" class=\"ml20\" (click)=\"deleteQuiz(q.qid)\">DELETE</button>\n\n    </mat-card-action>\n</mat-card>\n\n\n<div class=\"col-md-12\" *ngIf=\"quizdata.length==0\">\n    <mat-card class=\"mt20\">\n        <mat-card-content class=\"text-center\">\n            <h1>No Quiz Available</h1>\n        </mat-card-content>\n\n        <mat-card-actions class=\"text-center\">\n            <button routerLink='/admin/add-quiz' mat-raised-button color=\"accent\">Add New Quiz</button>\n        </mat-card-actions>\n\n    </mat-card>\n</div>\n\n\n<!-- <div class=\"container text-center mt20\">\n    <button routerLink='/admin/add-quiz' mat-raised-button color=\"accent\">Add New Quiz</button>\n</div> -->","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddCategoryComponent } from './pages/admin/add-category/add-category.component';\nimport { AddQuestionsComponent } from './pages/admin/add-questions/add-questions.component';\nimport { AddQuizComponent } from './pages/admin/add-quiz/add-quiz.component';\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\nimport { UpdateCategoryComponent } from './pages/admin/update-category/update-category.component';\nimport { UpdateQuestionComponent } from './pages/admin/update-question/update-question.component';\nimport { UpdateQuizComponent } from './pages/admin/update-quiz/update-quiz.component';\nimport { ViewCategoriesComponent } from './pages/admin/view-categories/view-categories.component';\nimport { ViewQuizQuestionsComponent } from './pages/admin/view-quiz-questions/view-quiz-questions.component';\nimport { ViewQuizzesComponent } from './pages/admin/view-quizzes/view-quizzes.component';\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\nimport { Error404Component } from './pages/errorpage/error404/error404.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { AboutQuizComponent } from './pages/user/about-quiz/about-quiz.component';\nimport { InstructionsComponent } from './pages/user/instructions/instructions.component';\nimport { LoadQuizComponent } from './pages/user/load-quiz/load-quiz.component';\nimport { StartComponent } from './pages/user/start/start.component';\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\nimport { AdminGuard } from './services/admin.guard';\nimport { UserGuard } from './services/user.guard';\n\nconst routes: Routes = [\n\n  // For Home Page\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full'\n  },\n\n  // For Signup Page\n  {\n    path: 'signup',\n    component: SignupComponent,\n    pathMatch: 'full',\n  },\n\n  // For Login Page\n  {\n    path: 'login',\n    component: LoginComponent,\n    pathMatch: 'full',\n  },\n\n  // For Admin Dashboard\n  {\n    path: 'admin',\n    component: DashboardComponent,\n    // pathMatch: 'full',\n    // Admin Gaurd\n    canActivate: [AdminGuard],\n\n    // for profile content dashboard content\n    children: [\n      {\n        path: '',\n        component: WelcomeComponent,\n      },\n\n      {\n        path: 'profile',\n        component: ProfileComponent,\n      },\n\n      {\n        path: 'error404',\n        component: Error404Component,\n      },\n\n      {\n        path: 'categories',\n        component: ViewCategoriesComponent,\n      },\n\n      {\n        path: 'add-category',\n        component: AddCategoryComponent,\n      },\n\n      {\n        path: 'quizzes',\n        component: ViewQuizzesComponent,\n      },\n\n      {\n        path: 'add-quiz',\n        component: AddQuizComponent,\n      },\n\n      {\n        path: 'quiz/:qid',\n        component: UpdateQuizComponent,\n      },\n\n      {\n        path: 'view-questions/:qid/:title',\n        component: ViewQuizQuestionsComponent,\n      },\n\n      {\n        path: 'add-questions/:qid/:title',\n        component: AddQuestionsComponent,\n      },\n\n      {\n        path: 'question/:quesId',\n        component: UpdateQuestionComponent,\n      },\n\n      {\n        path: 'category/:cid',\n        component: UpdateCategoryComponent,\n      },\n\n    ],\n  },\n\n  // For Normal User Dashboard\n  {\n    path: 'user-dashboard',\n    component: UserDashboardComponent,\n    // Normal User Gaurd\n    canActivate: [UserGuard],\n    children:[\n      {\n        path: ':catId',\n        component:LoadQuizComponent,\n      },\n\n      {\n        path: 'instructions/:qid',\n        component: InstructionsComponent,\n      },\n\n      // about quiz view page\n      {\n        path: 'about-quiz/:qid',\n        component: AboutQuizComponent,\n      },\n\n    ],\n  },\n  {\n    path: 'start/:qid',\n    component: StartComponent,\n    canActivate: [UserGuard],\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-view-quiz-questions',\n  templateUrl: './view-quiz-questions.component.html',\n  styleUrls: ['./view-quiz-questions.component.css']\n})\nexport class ViewQuizQuestionsComponent implements OnInit {\n\n  qId;\n  qTitle;\n  questions=[];\n  constructor(\n    private _route : ActivatedRoute,\n    private _questionService: QuestionService,\n  ) { }\n\n  ngOnInit(): void {\n    this.qId = this._route.snapshot.params.qid;\n    this.qTitle = this._route.snapshot.params.title;\n    console.log(this.qId);\n    console.log(this.qTitle);\n\n    this._questionService.getQuestionsOfQuiz(this.qId).subscribe(\n      (data: any)=>{\n        //Success\n        this.questions = data;\n        // console.log(this.questions);\n        \n\n      },\n      (error)=>{\n        //error\n        Swal.fire('Error',\"Server error while loading data\",'error');\n      },\n    );\n  }\n\n  //delete questions\n  deleteQuestionById(qid){\n   Swal.fire({\n     icon: 'info',\n     showCancelButton: true,\n     confirmButtonText:'Delete',\n     title:'Are you sure, want to delete this question?',\n   }).then((result)=>{\n      if (result.isConfirmed){\n        //click on delete\n        this._questionService.deletingParticularQuestion(qid).subscribe(\n          (data)=>{\n            //Success\n            Swal.fire('Success' ,'Question deleted!!!' ,'success');\n            //Now filter data (Questions)\n            this.questions = this.questions.filter((q)=> q.quesId != qid);\n          },\n          (error)=>{\n            //error\n            Swal.fire('Error' ,'Server error while deleting question' ,'error');\n          },\n        );\n      }\n   });\n  }\n\n}\n","<h1 class=\"mt20\">Questions of {{qTitle}}</h1>\n\n<div class=\"bootstrap-wrapper\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"container text-center\">\n                <button [routerLink]=\"'/admin/add-questions/' +qId+'/'+qTitle\" mat-raised-button color=\"primary\">Add Questions</button>\n            </div>\n            <mat-card *ngFor=\"let q of questions ; let i = index\" class=\"mt20\">\n                <mat-card-content>\n                    <p>\n                        <b>Q {{i+1}} :</b>\n                        <span class=\"ml20\" [innerHTML]=\"q.content\"></span>\n                    </p>\n\n                    <div class=\"container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <p><b>(A) </b>{{q.option1}}</p>\n                            </div>\n\n                            <div class=\"col-md-6\">\n                                <p><b>(B) </b>{{q.option2}}</p>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <p><b>(C) </b>{{q.option3}}</p>\n                            </div>\n\n                            <div class=\"col-md-6\">\n                                <p><b>(D) </b>{{q.option4}}</p>\n                            </div>\n                        </div>\n                        <mat-divider></mat-divider>\n                        <p class=\"mt20\">\n                            <b>Correct Answer:</b> {{q.answer}}\n                        </p>\n                    </div>\n                </mat-card-content>\n\n                <mat-card-action>\n                    <button [routerLink]=\"'/admin/question/'+q.quesId\" mat-raised-button color=\"accent\" class=\"ml20\">Update</button>\n                    <button (click)=\"deleteQuestionById(q.quesId)\" mat-raised-button color=\"warn\" class=\"ml20\">Delete</button>\n                </mat-card-action>\n\n            </mat-card>\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}